{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-03-06T00:37:55.495642+00:00",
  "repo": "cfrg/draft-irtf-cfrg-frost",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "editorial",
      "description": "Editorial",
      "color": "59FAD3"
    },
    {
      "name": "interop",
      "description": "Interop-related issue",
      "color": "006b75"
    },
    {
      "name": "design",
      "description": "Design-related issue",
      "color": "d93f0b"
    },
    {
      "name": "blocked",
      "description": "",
      "color": "D0590D"
    },
    {
      "name": "discuss",
      "description": "",
      "color": "46C465"
    },
    {
      "name": "dependencies",
      "description": "Pull requests that update a dependency file",
      "color": "0366d6"
    },
    {
      "name": "next-version",
      "description": "Next draft version",
      "color": "ECD752"
    }
  ],
  "issues": [
    {
      "number": 5,
      "id": "MDU6SXNzdWU5NjM5NjI3NTI=",
      "title": "Ed25519 compatibility",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/5",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Beyond ristretto255, we should describe how to instantiate FROST with the [edwards25519 curve from RFC 8032](https://datatracker.ietf.org/doc/html/rfc8032#section-5.1). We might include the EdDSA verification procedure, too, listed below (bugs are my own):\r\n\r\n~~~\r\nEdDSA_verify(msg, sig, PK)\r\n\r\nInputs:\r\n- msg, message signed, an octet string\r\n- sig, message signature, a tuple of scalars (z, c)\r\n- PK, EdDSA public key\r\n\r\nOutputs: 1 if the signature is valid, and 0 otherwise\r\n\r\ndef EdDSA_verify(msg, sig, PK):\r\n  (z, c) = SIG\r\n  R' = (z * P) + (PK * c^-1)\r\n  c' = Hash(m, R')\r\n  if c == c':\r\n    return 1\r\n  return 0\r\n~~~",
      "createdAt": "2021-08-09T12:50:59Z",
      "updatedAt": "2021-12-13T23:49:23Z",
      "closedAt": "2021-12-13T23:49:23Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOEpUZs84-1lXn",
      "title": "Add P-256 ciphersuite",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/11",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "interop"
      ],
      "body": "",
      "createdAt": "2021-11-15T23:14:32Z",
      "updatedAt": "2021-12-14T14:56:00Z",
      "closedAt": "2021-12-14T14:56:00Z",
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOEpUZs84-1li8",
      "title": "Always compute with a cofactor h, even if h = 1 for the ciphersuite",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/12",
      "state": "CLOSED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "dconnolly"
      ],
      "labels": [
        "editorial"
      ],
      "body": "",
      "createdAt": "2021-11-15T23:15:09Z",
      "updatedAt": "2022-02-28T19:07:44Z",
      "closedAt": "2022-02-28T19:07:43Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly are we OK to close this out?",
          "createdAt": "2022-02-23T23:27:24Z",
          "updatedAt": "2022-02-23T23:27:24Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> Specify signature encoding based on group Element and Scalar serialization #85\r\n\r\nI think the place we need to use the cofactor check is in `verify`, and to do that we need to enumerate the cofactor `h` for each ciphersuite\r\n\r\nExamples from `frost-redjubjub` which multiplies by the cofactor in `is_small_order()`:\r\nhttps://github.com/ZcashFoundation/frost/blob/8ce992541afa2e49fbe7606dd81ee8c2a8648446/frost-redjubjub/src/verification_key.rs#L196\r\nhttps://github.com/ZcashFoundation/frost/blob/f10a159c7039641fae63b53387e66e55a8604acf/frost-redjubjub/src/batch.rs#L258\r\n\r\n(Batch is not described in the spec but the Schnorr verification procedure leads directly to the batch verification procedure)\r\n\r\n<img width=\"510\" alt=\"image\" src=\"https://user-images.githubusercontent.com/552961/155616257-b1fbc1c6-c30d-4b5c-9bfc-8abad6d73cc7.png\">\r\n",
          "createdAt": "2022-02-24T22:12:20Z",
          "updatedAt": "2022-02-24T22:12:52Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly isn't that being tracked separately by #68?",
          "createdAt": "2022-02-24T22:57:32Z",
          "updatedAt": "2022-02-24T22:57:32Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "You are correct! I think we can close this",
          "createdAt": "2022-02-28T19:07:43Z",
          "updatedAt": "2022-02-28T19:07:43Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOEpUZs84-1lxO",
      "title": "Detail domain separation ",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/13",
      "state": "CLOSED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-15T23:15:57Z",
      "updatedAt": "2021-12-13T23:30:56Z",
      "closedAt": "2021-12-13T23:30:56Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "This should be `PARAM_NAME_VARIABLE NAME`. So, for example, `RISTRETTO_RHO`",
          "createdAt": "2021-12-13T23:30:29Z",
          "updatedAt": "2021-12-13T23:30:29Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Dupe of #15 -- closing.",
          "createdAt": "2021-12-13T23:30:56Z",
          "updatedAt": "2021-12-13T23:30:56Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOEpUZs84-1pLo",
      "title": "Define a domain separation bytestring for each parameter set",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/15",
      "state": "CLOSED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "editorial"
      ],
      "body": "To update[ this change](https://github.com/chelseakomlo/frost-spec/pull/14) to point to $PARAMETER_SET.DOMAIN_SEPARATOR or something like that.",
      "createdAt": "2021-11-15T23:28:46Z",
      "updatedAt": "2022-02-03T21:09:33Z",
      "closedAt": "2022-02-03T21:09:33Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "For example: `H1(m) = H(\"FROST-RISTRETTO-SHA512\" || \"rho\" || len(m) || m)`",
          "createdAt": "2021-12-13T23:37:11Z",
          "updatedAt": "2021-12-13T23:37:11Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is done.",
          "createdAt": "2022-02-03T21:09:33Z",
          "updatedAt": "2022-02-03T21:09:33Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOEpUZs84-1pvt",
      "title": "Create list of known implementations",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/16",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [],
      "body": "And put it in the README.",
      "createdAt": "2021-11-15T23:31:05Z",
      "updatedAt": "2021-12-13T22:48:11Z",
      "closedAt": "2021-12-13T22:48:11Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Started in #30",
          "createdAt": "2021-12-13T22:48:11Z",
          "updatedAt": "2021-12-13T22:48:11Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOEpUZs84-1p4H",
      "title": "Specify order of commitments hashed into rho",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/17",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [
        "design"
      ],
      "body": "Currently it's an unordered set. We can probably just order by participant ID. We should also hash the participant ID into the value as well. We should encode these IDs as a 32-bit unsigned integer.\r\n\r\n````\r\nfor item in signing_package.signing_commitments.iter() {\r\n        hasher.update(item.index.to_be_bytes());\r\n        let hiding_bytes = item.hiding.0.compress().to_bytes();\r\n        hasher.update(hiding_bytes);\r\n        let binding_bytes = item.binding.0.compress().to_bytes();\r\n        hasher.update(binding_bytes);\r\n    }\r\n```",
      "createdAt": "2021-11-15T23:31:35Z",
      "updatedAt": "2022-01-29T00:58:07Z",
      "closedAt": "2022-01-29T00:58:06Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "On group consensus, we'll move to the order being `(identifier, commitment_i)`",
          "createdAt": "2022-01-13T23:57:56Z",
          "updatedAt": "2022-01-13T23:57:56Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think #52 addresses this. It's still not clear how to encode the indices in the hash function input, for example. Are they 32-bit unsigned integers? Something else? I'll put up a PR that addresses this further.",
          "createdAt": "2022-01-27T17:25:00Z",
          "updatedAt": "2022-01-27T17:25:00Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #53.",
          "createdAt": "2022-01-29T00:58:06Z",
          "updatedAt": "2022-01-29T00:58:06Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOEpUZs84-1p_c",
      "title": "Ensure that participant identifiers can never be zero",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/18",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [],
      "body": "... as zero (0) is a special-case identifier.",
      "createdAt": "2021-11-15T23:32:02Z",
      "updatedAt": "2021-12-13T17:26:42Z",
      "closedAt": "2021-12-13T17:26:42Z",
      "comments": []
    },
    {
      "number": 19,
      "id": "I_kwDOEpUZs84-1qOq",
      "title": "Specify known implementations",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/19",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should list all known FROST implementations and their status in terms of interoperability. \r\n\r\nSee https://github.com/cfrg/draft-irtf-cfrg-hpke for an example",
      "createdAt": "2021-11-15T23:32:50Z",
      "updatedAt": "2021-11-15T23:33:03Z",
      "closedAt": "2021-11-15T23:33:03Z",
      "comments": []
    },
    {
      "number": 20,
      "id": "I_kwDOEpUZs84-1qpW",
      "title": "Create test vectors for a NIST curve",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/20",
      "state": "CLOSED",
      "author": "isislovecruft",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "interop"
      ],
      "body": "We should specify valid test vectors for something like P256 for users who require following those standards.",
      "createdAt": "2021-11-15T23:34:34Z",
      "updatedAt": "2021-12-13T23:34:50Z",
      "closedAt": "2021-12-13T23:34:50Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "We need to specify this param set in the ciphersuites section: https://github.com/chelseakomlo/draft-irtf-cfrg-frost/blob/master/draft-irtf-cfrg-frost.md#ciphersuites-ciphersuites",
          "createdAt": "2021-12-13T23:33:13Z",
          "updatedAt": "2021-12-13T23:33:13Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Duplicate of  #11",
          "createdAt": "2021-12-13T23:34:49Z",
          "updatedAt": "2021-12-13T23:34:49Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOEpUZs84-1seN",
      "title": "Change construction for more efficient variant",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/21",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A more efficient variant of FROST was specified in https://eprint.iacr.org/2021/1375; the draft should reflect this.",
      "createdAt": "2021-11-15T23:43:25Z",
      "updatedAt": "2021-12-06T23:26:55Z",
      "closedAt": "2021-12-06T23:26:55Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by #28",
          "createdAt": "2021-12-06T23:26:55Z",
          "updatedAt": "2021-12-06T23:26:55Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOEpUZs84-1stj",
      "title": "Interop testing over Ristretto-Sha512",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/22",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "dconnolly"
      ],
      "labels": [
        "interop"
      ],
      "body": "",
      "createdAt": "2021-11-15T23:45:43Z",
      "updatedAt": "2022-02-02T01:49:47Z",
      "closedAt": "2022-02-02T01:49:40Z",
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "I have another FROST on Ristretto impl ready, I will commence interop testing with `frost-dalek`",
          "createdAt": "2021-12-14T00:10:19Z",
          "updatedAt": "2021-12-14T00:10:19Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Blocked by conformance with #42 first",
          "createdAt": "2022-01-14T00:20:50Z",
          "updatedAt": "2022-01-14T00:20:50Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly can we close this out and track interop in the implementation repos? I don't think this is an issue for the spec to resolve.",
          "createdAt": "2022-02-01T23:50:22Z",
          "updatedAt": "2022-02-01T23:50:22Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> @dconnolly can we close this out and track interop in the implementation repos? I don't think this is an issue for the spec to resolve.\r\n\r\n\ud83d\udcaf \r\n\r\nhttps://github.com/ZcashFoundation/frost/issues/8",
          "createdAt": "2022-02-02T01:49:40Z",
          "updatedAt": "2022-02-02T01:49:40Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOEpUZs84-1tTP",
      "title": "Explicitly define a Schnorr signature inline",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/23",
      "state": "CLOSED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [
        "editorial"
      ],
      "body": "We define the Schnorr signature operations in 7.1, but need a little more detail?",
      "createdAt": "2021-11-15T23:50:59Z",
      "updatedAt": "2022-01-29T00:58:48Z",
      "closedAt": "2022-01-29T00:58:47Z",
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Does this section resolve this issue?\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-frost/blob/master/draft-irtf-cfrg-frost.md#schnorr-signature-operations-dep-schnorr\r\n\r\n![image](https://user-images.githubusercontent.com/552961/149429534-fb81cce6-6352-434c-9556-9bf9ab64bf94.png)\r\n",
          "createdAt": "2022-01-14T00:18:55Z",
          "updatedAt": "2022-01-14T00:18:55Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep, I think we can close this. ",
          "createdAt": "2022-01-29T00:58:47Z",
          "updatedAt": "2022-01-29T00:58:47Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOEpUZs84-1ti5",
      "title": "Specify verification",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/24",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Specify with `(R, z)` and also how parameters are used within the verification algorithm",
      "createdAt": "2021-11-15T23:53:02Z",
      "updatedAt": "2021-12-14T21:11:44Z",
      "closedAt": "2021-12-14T21:11:44Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Two TODOs: \r\n1. Add the verification algorithm with `(R, z)` as the output\r\n2. Include information in each ciphersuite about deriving `c`",
          "createdAt": "2021-12-13T23:54:56Z",
          "updatedAt": "2021-12-13T23:55:41Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This may require changing the signing procedures such that the output signatures are of the form `(R, z)` (commitment based, where the challenge is rederived).",
          "createdAt": "2021-12-13T23:56:53Z",
          "updatedAt": "2021-12-13T23:56:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@chelseakomlo can we close this now that #34 is merged?",
          "createdAt": "2021-12-14T20:56:04Z",
          "updatedAt": "2021-12-14T20:56:20Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, thanks for flagging. Closed by #34\r\n",
          "createdAt": "2021-12-14T21:11:44Z",
          "updatedAt": "2021-12-14T21:11:44Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOEpUZs84-1t9h",
      "title": "Explictly describe assumptions when making each signing participant an aggregator",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/25",
      "state": "CLOSED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [
        "design"
      ],
      "body": "Vs having a single explicit aggregator:\r\n\r\n![image](https://user-images.githubusercontent.com/552961/141872069-a9d80b4d-094d-4159-8006-0de1843bc0ed.png)\r\n\r\nTo me this assumes some other trust level amongst the signing participants if they are allowed to self-verify its own signature before outputting it.",
      "createdAt": "2021-11-15T23:56:46Z",
      "updatedAt": "2022-01-18T20:00:55Z",
      "closedAt": "2022-01-18T20:00:55Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Use case: https://blog.coinbase.com/threshold-digital-signatures-1d467054acd4",
          "createdAt": "2021-11-16T00:02:26Z",
          "updatedAt": "2021-11-16T00:02:26Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #39",
          "createdAt": "2022-01-18T20:00:55Z",
          "updatedAt": "2022-01-18T20:00:55Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOEpUZs84_C6mv",
      "title": "Drop SUM/PROD notation in favor of subroutines",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/26",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "editorial"
      ],
      "body": "We use SUM/PROD for convenience, but I find it to be somewhat unreadable in text form. For example, this:\r\n\r\n~~~\r\nf_zero = SUM(points[0], points[t]){point}: point[1] * derive_lagrange_coefficient(point[0], L)\r\n~~~\r\n\r\nCould be written as:\r\n\r\n~~~\r\nf_zero = F(0)\r\nfor point in points:\r\n   f_zero = f_zero + (point[1] * derive_lagrange_coefficient(point[0], L))\r\n~~~\r\n\r\nThis is certainly subjective, but I find the latter easier to read in text form. (It would be lovely if we could throw \\sum and \\prod in specs!)",
      "createdAt": "2021-11-18T19:38:01Z",
      "updatedAt": "2022-01-29T00:57:55Z",
      "closedAt": "2022-01-29T00:57:55Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #53.",
          "createdAt": "2022-01-29T00:57:55Z",
          "updatedAt": "2022-01-29T00:57:55Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "I_kwDOEpUZs85Bn_hW",
      "title": "Review length of messages",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/37",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is currently a limit on the length of messages at `2^16-1`. Let's review this restriction to determine if this length is sufficient, and what to recommend in the setting if longer messages are needed. ",
      "createdAt": "2022-01-13T01:21:08Z",
      "updatedAt": "2022-01-29T01:12:35Z",
      "closedAt": "2022-01-29T01:12:35Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Tracking in #55.",
          "createdAt": "2022-01-29T01:12:35Z",
          "updatedAt": "2022-01-29T01:12:35Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "I_kwDOEpUZs85BoADG",
      "title": "Review naming of nonces",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/38",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "dconnolly"
      ],
      "labels": [],
      "body": "Right now we refer to the nonce pair as `(D, E)` as is done in the FROST paper. Let's review this notation and decide if we should adopt more descriptive naming such as \"hiding\" and \"binding.\"",
      "createdAt": "2022-01-13T01:23:16Z",
      "updatedAt": "2022-02-04T01:21:32Z",
      "closedAt": "2022-02-04T01:21:32Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, please! `(D, E)` are quite vague. @dconnolly would you be able to take this? I think `hiding_nonce` and `blinding_nonce` are perfectly fine terms for `d` and `e`, respectively. I suppose we might call the commitments to these nonces `hiding_nonce_commitment` and `blinding_nonce_commitment`, resp?",
          "createdAt": "2022-01-29T01:12:16Z",
          "updatedAt": "2022-01-29T01:12:16Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #62.",
          "createdAt": "2022-02-03T21:07:53Z",
          "updatedAt": "2022-02-03T21:07:53Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOEpUZs85BoFcw",
      "title": "Review inputs to frost_sign",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/40",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Should we rewrite inputs as a function of the SigningPackage, or have SigningPackage deserialization done externally to these functions?",
      "createdAt": "2022-01-13T01:44:47Z",
      "updatedAt": "2022-02-23T23:27:12Z",
      "closedAt": "2022-02-23T23:27:12Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think these should be expressed in terms of the \"raw\" values. SigningPackage is an external detail. (An application could use a different encoding if it wanted without changing the breaking interoperability \ud83e\udd37 )",
          "createdAt": "2022-01-29T01:11:04Z",
          "updatedAt": "2022-01-29T01:11:04Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOEpUZs85BrqEB",
      "title": "Add test vectors for FROST(P-256, SHA-256)",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/41",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See #49 for description of test vectors. ",
      "createdAt": "2022-01-13T15:50:20Z",
      "updatedAt": "2022-02-01T20:42:53Z",
      "closedAt": "2022-02-01T20:42:53Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd prefer we close this and use a single issue to track all test vectors.",
          "createdAt": "2022-02-01T20:42:53Z",
          "updatedAt": "2022-02-01T20:42:53Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "I_kwDOEpUZs85BrrYt",
      "title": "Add test vectors for FROST(ristretto255, SHA-512) ",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/42",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "See #49 for description of test vectors. ",
      "createdAt": "2022-01-13T15:55:07Z",
      "updatedAt": "2022-01-29T00:59:18Z",
      "closedAt": "2022-01-29T00:59:18Z",
      "comments": []
    },
    {
      "number": 43,
      "id": "I_kwDOEpUZs85Brz0z",
      "title": "Messages should be fixed size when hashing ",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/43",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This comes from an audit of FROST implementations, an easy fix for this is to hash the message before it is hashed to derive `rho` or the challenge. \r\n\r\nSee recommendation 2.2 https://github.com/ZcashFoundation/redjubjub/blob/main/zcash-frost-audit-report-20210323.pdf",
      "createdAt": "2022-01-13T16:24:43Z",
      "updatedAt": "2022-02-01T20:44:14Z",
      "closedAt": "2022-02-01T17:45:05Z",
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #55 ",
          "createdAt": "2022-02-01T17:45:05Z",
          "updatedAt": "2022-02-01T17:45:05Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Wait, is it? #55 is about lifting message size limits. This issue is about pre-hashing the message before signing it. They're separable issues, I think. Can we please reopen this and track them separately?",
          "createdAt": "2022-02-01T20:44:14Z",
          "updatedAt": "2022-02-01T20:44:14Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOEpUZs85Bsdf0",
      "title": "Denote when and which information needs to be deleted",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/44",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [
        "next-version"
      ],
      "body": "At various times throughout the protocol, secret information should be securely deleted. We should denote in the draft when these occur and over which information. ",
      "createdAt": "2022-01-13T18:54:20Z",
      "updatedAt": "2022-02-28T19:41:36Z",
      "closedAt": "2022-02-28T19:41:36Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@chelseakomlo can you please take this? It should go into the security considerations.",
          "createdAt": "2022-01-29T01:09:32Z",
          "updatedAt": "2022-01-29T01:09:32Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOEpUZs85Bsel0",
      "title": "Add failure case when signers receive insufficient information for a valid signing operation",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/45",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "For example, if signers receive fewer than `t` commitments, they should abort signing. \r\n\r\nWe should discuss also if signers were to receive commitments where either value is null. ",
      "createdAt": "2022-01-13T18:57:17Z",
      "updatedAt": "2022-02-01T00:27:37Z",
      "closedAt": "2022-02-01T00:27:29Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@chelseakomlo can we fold this into #48 and close this?",
          "createdAt": "2022-01-31T16:14:56Z",
          "updatedAt": "2022-01-31T16:14:56Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "(Done and copied the issue text over)",
          "createdAt": "2022-02-01T00:27:37Z",
          "updatedAt": "2022-02-01T00:27:37Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "I_kwDOEpUZs85BtdCy",
      "title": "Signing participants should verify message before signing",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/47",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [],
      "body": "The draft assumes that all participants verify the message that they are signing before they sign it. We should make this assumption explicit in the draft. ",
      "createdAt": "2022-01-13T21:49:30Z",
      "updatedAt": "2022-02-23T16:08:33Z",
      "closedAt": "2022-02-23T16:08:33Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> The draft assumes that all participants verify the message that they are signing before they sign it. We should make this assumption explicit in the draft.\r\n\r\n@chelseakomlo What does it mean to verify the message? This seems like an application-specific consideration that might be useful to note in the security considerations, but I don't see a protocol change required here.",
          "createdAt": "2022-01-29T01:00:17Z",
          "updatedAt": "2022-01-29T01:00:17Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "It is application-specific, but I think we should call this out specifically because it is easy to overlook or forget about. I'll note it as a security consideration but also say that how this is performed is application-specific.",
          "createdAt": "2022-02-01T17:43:16Z",
          "updatedAt": "2022-02-01T17:43:16Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I guess I don't understand what sort of verification you have in mind. Do you have an example?",
          "createdAt": "2022-02-01T17:44:04Z",
          "updatedAt": "2022-02-01T17:44:04Z"
        }
      ]
    },
    {
      "number": 48,
      "id": "I_kwDOEpUZs85Bt8XV",
      "title": "Specify places in the spec where the protocol should error or abort",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/48",
      "state": "OPEN",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [
        "next-version"
      ],
      "body": "We should add everywhere in the spec where the protocol should error and/or abort, such as: \r\n\r\n1. When a signature share is invalid\r\n2. When `t` is set to `1`- `THRESHOLD_LIMIT` MUST be greater than one\r\n3. When `t` is greater than `n`\r\n4. When fewer than `t` commitments are received\r\n5. When any received commitment is null\r\n6. When a participant index is `0`\r\n7. When the message that is requested to be signed is invalid\r\n8. When a signing request is made with respect to commitments that were used for a previous signature (i.e, request for a nonce reuse)\r\n9. Verification of a signature share fails on aggregation\r\n\r\nWe should discuss also if signers were to receive commitments where either value is null.",
      "createdAt": "2022-01-13T23:22:00Z",
      "updatedAt": "2022-02-28T19:16:20Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 49,
      "id": "I_kwDOEpUZs85Bt_C3",
      "title": "Test Vectors",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/49",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Here are the test vectors that we would like for each ciphersuite:\r\n\r\n- Success case\r\n1. (2,3), where the threshold is 2 and number of participants are 3\r\n2. Inputs should be deterministic, outputs should be the defined serialized structs. \r\n3. Tests should validate for the (2,3) signers and (3,3) signers\r\n\r\n- Failure cases: \r\n1. Participant index of 0\r\n2. When t is one",
      "createdAt": "2022-01-13T23:30:26Z",
      "updatedAt": "2022-02-12T01:38:54Z",
      "closedAt": "2022-02-12T01:38:54Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Related: https://github.com/ZcashFoundation/frost/blob/main/frost-ristretto255/tests/frost.rs",
          "createdAt": "2022-01-28T22:09:23Z",
          "updatedAt": "2022-01-28T22:09:23Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Linking #42 and #41, and close those two.",
          "createdAt": "2022-01-29T00:59:14Z",
          "updatedAt": "2022-01-29T00:59:14Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by #60 for Ristretto, opening #41 to track FROST(P-256, SHA-256)",
          "createdAt": "2022-02-01T20:05:47Z",
          "updatedAt": "2022-02-01T20:05:47Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We haven't resolved this yet! Test vectors still aren't in the draft, and not all cases above have been covered.",
          "createdAt": "2022-02-01T20:24:14Z",
          "updatedAt": "2022-02-01T20:24:14Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "I_kwDOEpUZs85BuDm5",
      "title": "Clarify HashToScalar/H2 reduction to scalars",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/50",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "\"c\" and \"rho\" are both the result of hash-to-scalar (H2), but we don't really make clear how the scalar conversion is done.\r\n\r\n",
      "createdAt": "2022-01-13T23:45:35Z",
      "updatedAt": "2022-02-04T01:20:49Z",
      "closedAt": "2022-02-04T01:20:49Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Same goes for the output of H1, too, which is assumed to map to a non-zero scalar.",
          "createdAt": "2022-01-26T23:12:19Z",
          "updatedAt": "2022-01-26T23:12:33Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #62.",
          "createdAt": "2022-02-03T21:08:04Z",
          "updatedAt": "2022-02-03T21:08:04Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "I_kwDOEpUZs85BuDql",
      "title": "Drop HashToScalar, clarify H2 reduction to scalars",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/51",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\"c\" and \"rho\" are both the result of hash-to-scalar (H2), but we don't really make clear how the scalar conversion is done.",
      "createdAt": "2022-01-13T23:45:49Z",
      "updatedAt": "2022-01-13T23:46:46Z",
      "closedAt": "2022-01-13T23:46:46Z",
      "comments": []
    },
    {
      "number": 54,
      "id": "I_kwDOEpUZs85CoRGF",
      "title": "Verification of signature shares should be mandatory",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/54",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "This also means that whoever is performing aggregate needs to be given the correct public keys after keygen is performed. I.e, those keys should be valid, but it is up to the implementation to ensure that they are.",
      "createdAt": "2022-01-28T21:13:29Z",
      "updatedAt": "2022-01-31T14:58:11Z",
      "closedAt": "2022-01-31T14:58:11Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll take this.",
          "createdAt": "2022-01-29T01:00:32Z",
          "updatedAt": "2022-01-29T01:00:32Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "I_kwDOEpUZs85CoTG3",
      "title": "Length of message to be signed should be larger",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/55",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "discuss"
      ],
      "body": "Currently messages are limited to the `2^16` length in a `SigningPackage`, but instead this should be limited by the underlying hash function minus minus overhead such as public key, commitment set, etc. \r\n\r\n\r\n",
      "createdAt": "2022-01-28T21:24:43Z",
      "updatedAt": "2022-02-14T18:28:01Z",
      "closedAt": "2022-02-14T18:28:01Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Upon revisiting this, I think we ought to remove the practical limit entirely and let applications define it. We should define the theoretical limit based on the underlying cryptographic hash function, but how applications choose to wrap up messages between coordinator and signers should be left to those applications, I think.\r\n\r\nBasically, I think I'm now advocating for removing `SigningPackage` and the like as _requirements_. A shared wire format isn't necessary for interoperability here. ",
          "createdAt": "2022-01-31T16:43:03Z",
          "updatedAt": "2022-01-31T16:43:03Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree that the message length should be unbounded but I'm uncertain about removing the `SigningPackage` wire format altogether. Do you mind saying why this is a preferable option than just allowing the message length to be variable-sized in this data structure?",
          "createdAt": "2022-01-31T23:48:25Z",
          "updatedAt": "2022-01-31T23:48:25Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Do you mind saying why this is a preferable option than just allowing the message length to be variable-sized in this data structure?\r\n\r\nSure: it will surely vary by use case and application embedding, so a one-size-fits-all structure isn't necessary for interop. Thus, I think we ought to just remove it.",
          "createdAt": "2022-02-01T00:12:50Z",
          "updatedAt": "2022-02-01T00:12:50Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok. We can keep `SigningPackage` as an example, but remove the requirement that implementations enforce this structure? I can do this change. ",
          "createdAt": "2022-02-01T15:59:47Z",
          "updatedAt": "2022-02-01T15:59:47Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I would hold off until we have a larger discussion about it. I think this relates to the interface that this specification should expose, which is something I raised in #62.",
          "createdAt": "2022-02-01T16:00:47Z",
          "updatedAt": "2022-02-01T16:00:47Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Can we close as resolved?",
          "createdAt": "2022-02-09T19:31:05Z",
          "updatedAt": "2022-02-09T19:31:05Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we can, yeah. The message limit was lifted since the API no longer operates in terms of SignaturePackages and the like. @chelseakomlo, if you're OK with this, can you please close?",
          "createdAt": "2022-02-09T20:47:22Z",
          "updatedAt": "2022-02-09T20:47:22Z"
        }
      ]
    },
    {
      "number": 56,
      "id": "I_kwDOEpUZs85CoUPA",
      "title": "Limit number of signers to 2^16-1",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/56",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is no theoretical hard bound on the number of participants, but we cap the number of participants to something reasonable just for ease of managing secret key material. ",
      "createdAt": "2022-01-28T21:31:43Z",
      "updatedAt": "2022-01-31T18:48:50Z",
      "closedAt": "2022-01-31T18:48:50Z",
      "comments": [
        {
          "author": "isislovecruft",
          "authorAssociation": "COLLABORATOR",
          "body": "2^16-1 because participant index cannot be zero.",
          "createdAt": "2022-01-28T22:05:22Z",
          "updatedAt": "2022-01-28T22:05:22Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "I_kwDOEpUZs85CoUy0",
      "title": "Use Commitment List Terminology",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/57",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently the spec uses `B` as a variable name for the commitment set for a signing session. Instead, we should use the variable name `commitment_list`.",
      "createdAt": "2022-01-28T21:35:15Z",
      "updatedAt": "2022-01-29T00:57:25Z",
      "closedAt": "2022-01-29T00:57:25Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Or `commitment_list` since we assume it to have a well-defined order based no participant index?",
          "createdAt": "2022-01-28T22:03:03Z",
          "updatedAt": "2022-01-28T22:03:03Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #53.",
          "createdAt": "2022-01-29T00:57:25Z",
          "updatedAt": "2022-01-29T00:57:25Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOEpUZs85CoVYi",
      "title": "Commitment set should be hashed in ascending order of participant id",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/58",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently, the commitment set does not specify ordering of elements that are hashed in. Instead, we should hash in commitment elements in ascending order of the participant identifier. ",
      "createdAt": "2022-01-28T21:38:52Z",
      "updatedAt": "2022-01-29T00:58:26Z",
      "closedAt": "2022-01-29T00:57:18Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #53.",
          "createdAt": "2022-01-29T00:57:18Z",
          "updatedAt": "2022-01-29T00:57:18Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "(This was also a dupe!)",
          "createdAt": "2022-01-29T00:58:26Z",
          "updatedAt": "2022-01-29T00:58:26Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "I_kwDOEpUZs85C-Far",
      "title": "Define alternative signature format with (response, commitment) ",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/64",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC8032 requires that the signature format be in the form (response, challenge) but some implementations would like the format to be (response, commitment)  in order to allow for batched signature verification. We should allow for this alternative format in this draft.",
      "createdAt": "2022-02-03T21:26:36Z",
      "updatedAt": "2022-02-09T19:30:00Z",
      "closedAt": "2022-02-09T19:30:00Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this will need to be a ciphersuite-specific detail. How we decide to present that in the draft is not immediately clear to me right now.",
          "createdAt": "2022-02-03T21:27:52Z",
          "updatedAt": "2022-02-03T21:27:52Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Re-reading this, small clarification: RFC8032 signatures are of the form (commitment, response), and this is [what's in the draft now](https://cfrg.github.io/draft-irtf-cfrg-frost/draft-irtf-cfrg-frost.html#name-signature-share-aggregation) (`R` is the group commitment and `z` is the response, to use terminology here). Unless I'm misunderstanding, I think we can close this.",
          "createdAt": "2022-02-06T01:42:48Z",
          "updatedAt": "2022-02-06T01:42:55Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah i think we can close",
          "createdAt": "2022-02-09T19:29:50Z",
          "updatedAt": "2022-02-09T19:29:50Z"
        }
      ]
    },
    {
      "number": 68,
      "id": "I_kwDOEpUZs85DD124",
      "title": "Single-party signature generation and verification, accounting for cofactors",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/68",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "isislovecruft"
      ],
      "labels": [
        "next-version"
      ],
      "body": "The [current verification](https://cfrg.github.io/draft-irtf-cfrg-frost/draft-irtf-cfrg-frost.html#name-schnorr-signature-operation) routine diverges from RFC8032. In particular, it does this:\r\n\r\n~~~\r\ndef schnorr_signature_verify(msg, sig = (R, z), PK):\r\n    msg_hash = H3(msg)\r\n    comm_enc = G.SerializeElement(R)\r\n    pk_enc = G.SerializeElement(PK)\r\n    challenge_input = group_comm_enc || group_public_key_enc || msg_hash\r\n    c = H2(challenge_input)\r\n\r\n    l = ScalarBaseMult(z)\r\n    r = R + (c * PK)\r\n    if l == r:\r\n      return 1\r\n    return 0\r\n~~~\r\n\r\nWhen it should do something like this (partially modified from [ed25519-zebra's ZIP15-based verification check](https://github.com/ZcashFoundation/ed25519-zebra/blob/main/src/verification_key.rs)):\r\n\r\n~~~\r\ndef schnorr_signature_verify(msg, sig = (R, z), PK):\r\n    msg_hash = H3(msg)\r\n    comm_enc = G.SerializeElement(R)\r\n    pk_enc = G.SerializeElement(PK)\r\n    challenge_input = group_comm_enc || group_public_key_enc || msg_hash\r\n    c = H2(challenge_input)\r\n\r\n    # Check that [8][Z]B = [8]R + [8][c]PK:\r\n    # <=> 0 == [8](R - ([z]B - [c]PK))\r\n    # <=> 0 == [8](R - R'), where R' = [z]B - [c]PK\r\n    \r\n    Z = ScalarBaseMult(z)\r\n    Rp = c * PK\r\n    D = 8 * (R - Rp)\r\n    return D == Identity()\r\n~~~\r\n\r\nThis is specific to RFC8032 and Ed25519, where the cofactor of the curve is 8, so we probably need to write this in terms of a more general cofactor `h`. This probably relates to #12, so cc @dconnolly for a sanity check. =)",
      "createdAt": "2022-02-06T01:53:30Z",
      "updatedAt": "2022-02-28T20:13:57Z",
      "closedAt": null,
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes the 8 is because the Edwards curve has that cofactor. In the p256 and Ristretto cases, that h = 1. One way to handle this is to make the h explicit in our formulas and explicit in the ciphersuites, so h = 1, or h = 8, or whatever. ",
          "createdAt": "2022-02-09T19:29:00Z",
          "updatedAt": "2022-02-09T19:29:00Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Relatedly : https://github.com/cfrg/draft-irtf-cfrg-frost/issues/12",
          "createdAt": "2022-02-09T19:59:35Z",
          "updatedAt": "2022-02-09T19:59:35Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "```\r\ndef schnorr_signature_verify(msg, sig = (R, z), PK):\r\n    comm_enc = G.SerializeElement(R)\r\n    pk_enc = G.SerializeElement(PK)\r\n    challenge_input = comm_enc || pk_enc || msg\r\n    c = H2(challenge_input)\r\n\r\n    Z = ScalarBaseMult(z)\r\n    Rp = c * PK\r\n    check = h * (Z - Rp - R)\r\n    return check == G.Identity()\r\n ```",
          "createdAt": "2022-02-28T19:47:34Z",
          "updatedAt": "2022-02-28T19:47:34Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Notes: \r\n- Right now we don't have verification algorithms defined externally for P-256 and Ristretto (either for plain Schnorr or EdDSA) \r\n- We should define verification algorithms for these two, but others we should reference existing standards. ",
          "createdAt": "2022-02-28T20:00:55Z",
          "updatedAt": "2022-02-28T20:13:31Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOEpUZs85DD16k",
      "title": "Add secp256k1 ciphersuite and test vectors",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/69",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "isislovecruft",
        "chris-wood"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "The adoption call for this draft indicated that we'd need to support specializations for all RFC8032 signatures, including Ed25519 and Ed448. This should be a trivial extension now that we have the ed25519 suite. ",
      "createdAt": "2022-02-06T01:55:19Z",
      "updatedAt": "2022-03-01T21:03:49Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Also, maybe we need to add ciphersuites for other curves that are used for Schnorr signatures? I _think_ this would include, e.g., secp256k1?",
          "createdAt": "2022-02-06T01:58:30Z",
          "updatedAt": "2022-02-06T01:58:30Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> Also, maybe we need to add ciphersuites for other curves that are used for Schnorr signatures? I _think_ this would include, e.g., secp256k1?\n\nI had vague plans to implement this anyway for our FROST impls but wasn't sure if we had interest in standardizing it. I was under the impression that secp256k1 is usually used in ECDSA, and that standardizing a Schnorr signature using it would be going against the grain (imo in a good direction, but). Are there other Schnorr systems using it out there?",
          "createdAt": "2022-02-09T19:57:44Z",
          "updatedAt": "2022-02-09T19:57:44Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are there other Schnorr systems using it out there?\r\n\r\nI dunno! That's the question, I guess. We should make sure we show how to implement FROST for all curves that folks care about.",
          "createdAt": "2022-02-09T20:46:26Z",
          "updatedAt": "2022-02-09T20:46:26Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "I_kwDOEpUZs85DD1_q",
      "title": "Signature encoding",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/70",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "The draft doesn't take an opinionated stance on how to encode signatures -- it currently just spits out the commitment and response pair `(R, z)`. On the contrary, RFC8032 signatures are represented as the concatenation of `R` and `z`, both serialized. It seems like the RFC8032 suite ought to produce signatures in this format. But what about other ciphersuites?",
      "createdAt": "2022-02-06T01:57:49Z",
      "updatedAt": "2022-02-19T03:11:33Z",
      "closedAt": "2022-02-19T03:11:33Z",
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "I lean towards this, we have Signature types that are just the bytes of those elements and can easily be serialized to a concatenation",
          "createdAt": "2022-02-09T19:26:00Z",
          "updatedAt": "2022-02-09T19:26:00Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "To clarify, by \"this\" you mean what's currently in the draft?",
          "createdAt": "2022-02-09T20:45:45Z",
          "updatedAt": "2022-02-09T20:45:45Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "per meeting: \r\n\r\n` Serialize: Ciphersuite.SerializeElement(R) || Ciphersuite.SerializeScalar(z)\r\n`",
          "createdAt": "2022-02-14T18:26:30Z",
          "updatedAt": "2022-02-14T18:26:30Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "I_kwDOEpUZs85DN_tU",
      "title": "Add check for valid points",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/72",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chelseakomlo"
      ],
      "labels": [],
      "body": "The FROST paper assumes a prime order group. However, when we interoperate with curves that can have  invalid points, we'll need to identify places in the draft where these checks should occur. ",
      "createdAt": "2022-02-08T20:47:44Z",
      "updatedAt": "2022-02-19T03:11:33Z",
      "closedAt": "2022-02-19T03:11:33Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@chelseakomlo I think this is already addressed [in this section](https://cfrg.github.io/draft-irtf-cfrg-frost/draft-irtf-cfrg-frost.html#section-6.1.1). Can you please confirm?",
          "createdAt": "2022-02-08T20:55:55Z",
          "updatedAt": "2022-02-08T20:55:55Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Just in case, is there any danger to not checking for valid points when verifying? I think not because it's verification and everything is public but I was working on this  recently and was curious",
          "createdAt": "2022-02-09T19:54:56Z",
          "updatedAt": "2022-02-09T19:54:56Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Good question. I don't think so? It seems harmless to add a check, just to be safe, but... here be dragons.",
          "createdAt": "2022-02-09T20:48:00Z",
          "updatedAt": "2022-02-09T20:48:00Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "It looks like RFC8032 checks for valid points when verifying, so we should probably as well in the places where we define single-party verification. \r\n\r\nhttps://datatracker.ietf.org/doc/html/rfc8032#section-3.4\r\n\r\nGood catch @dconnolly ! ",
          "createdAt": "2022-02-10T21:35:16Z",
          "updatedAt": "2022-02-10T21:46:26Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@chelseakomlo will you have time to prepare a PR for this, or would you like me to do it?",
          "createdAt": "2022-02-10T21:53:44Z",
          "updatedAt": "2022-02-10T21:53:44Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood If you have time to do this, that would be fantastic ",
          "createdAt": "2022-02-10T22:02:02Z",
          "updatedAt": "2022-02-10T22:02:02Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Leaving open as a reminder to ourselves to review this again after the draft is more stable. ",
          "createdAt": "2022-02-14T18:21:20Z",
          "updatedAt": "2022-02-14T18:21:20Z"
        }
      ]
    },
    {
      "number": 82,
      "id": "I_kwDOEpUZs85Dvo1F",
      "title": "Question regarding the concatenation of contextString in POC code",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/82",
      "state": "CLOSED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Hi, looking at the POC code, I see there is a space between the `contextString` and the `rho`, `chal` and `digest` words\r\n```python\r\ndef H1(self, m):\r\n        hash_input = _as_bytes(\"FROST-RISTRETTO255-SHA512 rho\") + m\r\n...\r\n```\r\nbut in the document there is no space (see `H(contextString || \"rho\" || m)`).\r\n\r\nJust looking for clarification, thanks",
      "createdAt": "2022-02-14T00:19:41Z",
      "updatedAt": "2022-02-15T00:42:54Z",
      "closedAt": "2022-02-15T00:42:54Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's go with no space -- thanks @aldenml!",
          "createdAt": "2022-02-14T18:19:48Z",
          "updatedAt": "2022-02-14T18:19:48Z"
        }
      ]
    },
    {
      "number": 99,
      "id": "I_kwDOEpUZs85E44Xa",
      "title": "Produce test vector json in separate files for each ciphersuite",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/99",
      "state": "OPEN",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "enhancement"
      ],
      "body": "This would make it easier for importing the test vectors for only the ciphersuite(s) you care about into your own code",
      "createdAt": "2022-03-01T20:05:10Z",
      "updatedAt": "2022-03-01T20:05:11Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 106,
      "id": "I_kwDOEpUZs85FIlnM",
      "title": "trusted_dealer_keygen should output a VSS commitment",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/issues/106",
      "state": "OPEN",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We discuss right now that `trusted_dealer_keygen` should output a VSS commitment, but the interface for generating secret shares does not output the coefficients, and so is incompatible with what is needed to generate a commitment. We should change the interface so that it is possible, and then update `trusted_dealer_keygen` to generate and output the VSS commitment. \r\n",
      "createdAt": "2022-03-04T17:24:15Z",
      "updatedAt": "2022-03-04T17:26:24Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyMTQwMDEw",
      "title": "Begin detailing notation and primitives",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/1",
      "state": "MERGED",
      "author": "isislovecruft",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-11T22:00:49Z",
      "updatedAt": "2021-08-09T01:50:33Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "b82f641a32d2e11f5954208d9a0dc6b0397077b6",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "feature/notation-and-primitives",
      "headRefOid": "7b996fc3a502dd42adfc9a653fc6d9bd8700c657",
      "closedAt": "2021-08-09T01:50:30Z",
      "mergedAt": "2021-08-09T01:50:30Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "4520453cd5671cfa47e863976fe2b1e292c6c6d9"
      },
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Oh wow, I completely missed seeing this. I'm going to merge this in today. Thank you! ",
          "createdAt": "2021-08-05T15:23:24Z",
          "updatedAt": "2021-08-05T15:23:24Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0NzAxODY5MzMw",
      "title": "Add POG dependency, and clean up overview.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/2",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is an imperfect start, but, hopefully it helps! I'm happy to take the secret sharing section(s) next, if that'd be useful.",
      "createdAt": "2021-08-03T00:39:16Z",
      "updatedAt": "2021-08-03T15:17:07Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "3c859132fac5fabbe86150cd3598ea1fb81a4ace",
      "headRepository": null,
      "headRefName": "caw/overview-and-deps",
      "headRefOid": "69d06d3c8300770162d24a5015994931f556bd50",
      "closedAt": "2021-08-03T15:17:00Z",
      "mergedAt": "2021-08-03T15:17:00Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "6f4c2f70df048718490ad2efc53fa44939d3e3fa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMjI4ODQx",
          "commit": {
            "abbreviatedOid": "69d06d3"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-03T13:54:21Z",
          "updatedAt": "2021-08-03T13:54:21Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "This should actually be a VSS commitment, a Pedersen commitment is to a single value alpha, in the form C = g^alpha * h^beta, where beta is chosen uniformly at random.",
              "createdAt": "2021-08-03T13:54:21Z",
              "updatedAt": "2021-08-03T13:54:21Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIxMzMyMjIz",
          "commit": {
            "abbreviatedOid": "69d06d3"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-03T15:16:55Z",
          "updatedAt": "2021-08-03T15:16:56Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "I'll fix this up after merge! ",
              "createdAt": "2021-08-03T15:16:55Z",
              "updatedAt": "2021-08-03T15:16:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA1ODA3OTYx",
      "title": "Define secret-sharing in terms of polynomial operations",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/3",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-07T00:39:30Z",
      "updatedAt": "2021-08-07T18:57:26Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "e083e795cf123482feddb3b74e26e4a30a89efac",
      "headRepository": null,
      "headRefName": "caw/ss",
      "headRefOid": "326335f56b8ce6aaf52ce7c8f3d91eec4a1dce51",
      "closedAt": "2021-08-07T18:57:23Z",
      "mergedAt": "2021-08-07T18:57:23Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "6b40be2cc4e0fdff430a9f55b2808a86ddb5499f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA2MTI2MDg5",
      "title": "Serialization and whatnot",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/4",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-08T23:40:06Z",
      "updatedAt": "2021-08-09T00:41:33Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "95d23648d5855be9c3cf80d9950094e56eb9026a",
      "headRepository": null,
      "headRefName": "caw/ser",
      "headRefOid": "33afde6e3651151bb8b4cca32c95e17985ed58fb",
      "closedAt": "2021-08-09T00:41:30Z",
      "mergedAt": "2021-08-09T00:41:30Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "22477aeb53b1df0e9b69a0dbeed7073b7e667224"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA2NTMxNzA1",
      "title": "Add a protocol overview sketch.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/6",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And also cleanup the Schnorr signature section, make algorithms appear \"prettier\", add the (ristretto255, SHA-512) suite, and remove some redundant text.",
      "createdAt": "2021-08-09T13:39:30Z",
      "updatedAt": "2021-08-09T14:12:29Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "afe879a95fe5e6a7d46f46cbecb60eae7ca37a2c",
      "headRepository": null,
      "headRefName": "caw/cleanup",
      "headRefOid": "de8f77410e8327af119d75a43a1405c458cca539",
      "closedAt": "2021-08-09T14:12:26Z",
      "mergedAt": "2021-08-09T14:12:26Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "c1653cc29d5259befc5da276b868486f82b2c01a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA2OTI3NDM5",
      "title": "Fix typos and formatting",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/7",
      "state": "MERGED",
      "author": "teor2345",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "teor2345"
      ],
      "labels": [],
      "body": "Minor fixes to typos and formatting",
      "createdAt": "2021-08-09T23:43:57Z",
      "updatedAt": "2021-08-10T04:59:56Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "1901da2a719a67ac7d9901711800b80e15523b8b",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "fix-typos",
      "headRefOid": "5ddda99f38adb768462e77fb06f788112dfb49de",
      "closedAt": "2021-08-10T04:59:52Z",
      "mergedAt": "2021-08-10T04:59:52Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "5366d3b901d67ac046391e477924f376131b8047"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1ODk1MDc5",
          "commit": {
            "abbreviatedOid": "5ddda99"
          },
          "author": "teor2345",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T23:44:25Z",
          "updatedAt": "2021-08-09T23:44:25Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'm not sure about this function formatting",
              "createdAt": "2021-08-09T23:44:25Z",
              "updatedAt": "2021-08-09T23:44:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI1ODk1MzI5",
          "commit": {
            "abbreviatedOid": "5ddda99"
          },
          "author": "teor2345",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-09T23:45:02Z",
          "updatedAt": "2021-08-09T23:45:02Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "`SUM` and `PROD` are already specified 2 paragraphs above this one.",
              "createdAt": "2021-08-09T23:45:02Z",
              "updatedAt": "2021-08-09T23:45:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzI2MDA3MDA2",
          "commit": {
            "abbreviatedOid": "5ddda99"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks great, thanks @teor2345 ",
          "createdAt": "2021-08-10T04:59:40Z",
          "updatedAt": "2021-08-10T04:59:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOEpUZs84tg9xo",
      "title": "s/comitment/commitment/",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/8",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-21T19:59:11Z",
      "updatedAt": "2021-10-30T20:03:58Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "50588dac82f6d690a54fe6274fa89b5d61c4410a",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "typo",
      "headRefOid": "e12fa39ace272bf50ebe6d4594cabd913d64fe4a",
      "closedAt": "2021-10-30T20:03:58Z",
      "mergedAt": "2021-10-30T20:03:58Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "59e909df9fa067091b6bbdc9a8914dd10534c89c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84vTWR3",
          "commit": {
            "abbreviatedOid": "e12fa39"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-30T20:03:53Z",
          "updatedAt": "2021-10-30T20:03:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOEpUZs84uEeSY",
      "title": "Remove unused inputs",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/9",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-04T00:19:40Z",
      "updatedAt": "2021-11-18T17:20:28Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "59e909df9fa067091b6bbdc9a8914dd10534c89c",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "chris-wood-patch-1",
      "headRefOid": "e5fae627d622a657d0d5cf15aa256bd842047743",
      "closedAt": "2021-11-18T17:20:27Z",
      "mergedAt": "2021-11-18T17:20:27Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "482dd2dc09652725b57953f63b8d79fd4f05aa54"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 10,
      "id": "PR_kwDOEpUZs84uEfll",
      "title": "No let",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/10",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-04T00:30:12Z",
      "updatedAt": "2021-11-18T17:20:18Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "59e909df9fa067091b6bbdc9a8914dd10534c89c",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "chris-wood-patch-2",
      "headRefOid": "537cee8c30918d1f40fb3ce6d8cc191972ed14d8",
      "closedAt": "2021-11-18T17:20:18Z",
      "mergedAt": "2021-11-18T17:20:18Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "234ed7b4a82c260bb1bb1b29758135713c2be88e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOEpUZs84uj1zH",
      "title": "Domain-separate H1 and H2 by parameter set  example",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/14",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-15T23:26:47Z",
      "updatedAt": "2021-11-30T21:13:12Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "59e909df9fa067091b6bbdc9a8914dd10534c89c",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "domain-separate",
      "headRefOid": "a8f69a65087e521bbf3ebf8f44aba3bb30cb1989",
      "closedAt": "2021-11-30T21:01:17Z",
      "mergedAt": "2021-11-30T21:01:17Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "3c9ff7c7f37472ebef601869b8d93097b297b839"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 27,
      "id": "PR_kwDOEpUZs84uvPWo",
      "title": "Fix some issues in the polynomial math section",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/27",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-18T21:32:24Z",
      "updatedAt": "2021-12-02T03:39:20Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "482dd2dc09652725b57953f63b8d79fd4f05aa54",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/poly-bug-fixes",
      "headRefOid": "292563a27f0781a08dd301a1a4805a322ad31113",
      "closedAt": "2021-12-02T03:39:17Z",
      "mergedAt": "2021-12-02T03:39:17Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "6ead3aa798352d220c18076200634463b694dba8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84w78Yg",
          "commit": {
            "abbreviatedOid": "292563a"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good to me, thanks! ",
          "createdAt": "2021-12-02T03:39:09Z",
          "updatedAt": "2021-12-02T03:39:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 28,
      "id": "PR_kwDOEpUZs84vNnbR",
      "title": "Specify FROST efficiency improvements",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/28",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Efficiency improvements to FROST were presented in https://eprint.iacr.org/2021/1375. This change ensures that rho is derived correctly, and cites this paper for reference. ",
      "createdAt": "2021-11-30T21:53:21Z",
      "updatedAt": "2021-12-06T23:26:19Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "744d2245a096b61340f6968f2684e8907f98137d",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "efficient-variant",
      "headRefOid": "02926ae0ba4a2a7a7b3a9b0d4c9b7f3286a889bd",
      "closedAt": "2021-12-06T23:26:16Z",
      "mergedAt": "2021-12-06T23:26:16Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "db2a378d00c5393f908703641e8ba57fb62c3ab5"
      },
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Addresses issue #21 ",
          "createdAt": "2021-11-30T21:54:33Z",
          "updatedAt": "2021-11-30T21:54:33Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't see how this is more efficient. If anything, it seems to be less efficient since it requires more cycles to compute `binding_factor`. Was there more to be done in this PR? Also, the build breaks, which we should fix before merging.",
          "createdAt": "2021-11-30T23:45:35Z",
          "updatedAt": "2021-11-30T23:45:35Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry, I should have been more clear in the comment. The binding factor *must* include the identifiers of all the participants. I could have included these in the `B` term, but since we already defined `L`, I thought it would be clearer to include `L` separately. Let me know which you prefer. ",
          "createdAt": "2021-12-01T05:18:12Z",
          "updatedAt": "2021-12-01T05:18:12Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> The binding factor must include the identifiers of all the participants. I could have included these in the B term, but since we already defined L, I thought it would be clearer to include L separately. Let me know which you prefer.\r\n\r\nThe change is fine, but I'm just not seeing how this adds any efficiency improvement. To try and be a bit more clear: are the changes from Schnorr21 going to land in this PR, or another one?",
          "createdAt": "2021-12-01T16:09:25Z",
          "updatedAt": "2021-12-01T16:09:25Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "I just made the title more clear- these efficiency improvements are from Schnorr21; FROST20 requires computing different binding factors for each participant.",
          "createdAt": "2021-12-01T17:09:51Z",
          "updatedAt": "2021-12-01T17:09:51Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84w7QpP",
          "commit": {
            "abbreviatedOid": "b4e3e50"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83e\udd37 ",
          "createdAt": "2021-12-01T21:50:42Z",
          "updatedAt": "2021-12-01T21:50:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84xJj8T",
          "commit": {
            "abbreviatedOid": "17e788e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-06T23:12:46Z",
          "updatedAt": "2021-12-06T23:12:49Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n -  ins: C. A. Wood\r\n    name: Christopher A. Wood\r\n```",
              "createdAt": "2021-12-06T23:12:46Z",
              "updatedAt": "2021-12-06T23:12:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOEpUZs84vttdy",
      "title": "Participants should never be assigned the zero identifier.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/29",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses issue #18 ",
      "createdAt": "2021-12-11T18:22:11Z",
      "updatedAt": "2021-12-11T18:47:22Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "db2a378d00c5393f908703641e8ba57fb62c3ab5",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "zero-identifier",
      "headRefOid": "1b24faa469b44aa271403b6756a9ab41e00edc11",
      "closedAt": "2021-12-11T18:47:22Z",
      "mergedAt": "2021-12-11T18:47:22Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2e377fe7a1b5d70098cc9d362f68fae085ad5613"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84xcf_o",
          "commit": {
            "abbreviatedOid": "1b24faa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-11T18:45:55Z",
          "updatedAt": "2021-12-11T18:45:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDOEpUZs84vtuOl",
      "title": "Start list of known implementations",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/30",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It would be great to have a better distinguishes for implementations that are not complete but also not yet interoperable. Also how to specify the curves these different implementations are over, and which ones we should include here (i.e, should we include the redjubjub implementation). \r\n\r\nAddresses #16",
      "createdAt": "2021-12-11T18:43:19Z",
      "updatedAt": "2021-12-13T22:47:49Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "db2a378d00c5393f908703641e8ba57fb62c3ab5",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "implementations",
      "headRefOid": "69111dab6817bdcd3b0f923d00521d3023cbd3b5",
      "closedAt": "2021-12-13T22:47:47Z",
      "mergedAt": "2021-12-13T22:47:47Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "09758504e0732b16f865c5d80d2c69f3e0663d2d"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We should also add https://github.com/taurusgroup/multi-party-sig.",
          "createdAt": "2021-12-13T17:35:30Z",
          "updatedAt": "2021-12-13T17:35:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84xgTP2",
          "commit": {
            "abbreviatedOid": "135f73a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-13T17:35:34Z",
          "updatedAt": "2021-12-13T17:35:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDOEpUZs84vypY6",
      "title": "Add link to new frost-ristretto255 impl",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/31",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-12-13T23:27:53Z",
      "updatedAt": "2021-12-13T23:49:15Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "09758504e0732b16f865c5d80d2c69f3e0663d2d",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "add-frost-ristretto255",
      "headRefOid": "6a5099e58fc6fe364453ea163f3d99381b313e9d",
      "closedAt": "2021-12-13T23:49:15Z",
      "mergedAt": "2021-12-13T23:49:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c9d58cf05154ecd3a5a94afed7820d12dab1c54e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84xhi9w",
          "commit": {
            "abbreviatedOid": "6a5099e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-13T23:49:12Z",
          "updatedAt": "2021-12-13T23:49:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOEpUZs84vysgi",
      "title": "Add P256-SHA-256 ciphersuite",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/32",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To match the Ristretto ciphersuite as it exists",
      "createdAt": "2021-12-13T23:55:37Z",
      "updatedAt": "2021-12-14T19:55:38Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "c9d58cf05154ecd3a5a94afed7820d12dab1c54e",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "p256-sha-256",
      "headRefOid": "988686d23366f02f24440d3408f75450fb7276bd",
      "closedAt": "2021-12-14T14:56:00Z",
      "mergedAt": "2021-12-14T14:55:59Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "d44e648edcd9f6b18d589c8058f600728b8d15da"
      },
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood where should I put this:\r\n\r\n```\r\nx9.62:\r\n    title: \"Public Key Cryptography for the Financial Services Industry: the Elliptic Curve Digital Signature Algorithm (ECDSA)\"\r\n    date: Sep, 1998\r\n    seriesinfo:\r\n      \"ANSI\": X9.62-1998\r\n    author:\r\n      -\r\n        org: ANSI\r\n\r\n```",
          "createdAt": "2021-12-14T00:03:13Z",
          "updatedAt": "2021-12-14T00:03:13Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly there's a section up at the top we need to add, so it'd look like so:\r\n\r\n```\r\nnormative:\r\n   x9.62:\r\n     title: \"Public Key Cryptography for the Financial Services Industry: the Elliptic Curve Digital Signature Algorithm (ECDSA)\"\r\n     date: Sep, 1998\r\n     seriesinfo:\r\n       \"ANSI\": X9.62-1998\r\n     author:\r\n       -\r\n         org: ANSI\r\n\r\ninformative:\r\n   FROST20:\r\n   ...\r\n```",
          "createdAt": "2021-12-14T00:05:11Z",
          "updatedAt": "2021-12-14T00:05:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84xhkFT",
          "commit": {
            "abbreviatedOid": "dfc5156"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Excellent!",
          "createdAt": "2021-12-13T23:58:05Z",
          "updatedAt": "2021-12-13T23:58:59Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n## FROST(P-256, SHA-256)\r\n```",
              "createdAt": "2021-12-13T23:58:05Z",
              "updatedAt": "2021-12-13T23:58:59Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n- Hash: SHA-256, and Nh = 32.\r\n```",
              "createdAt": "2021-12-13T23:58:41Z",
              "updatedAt": "2021-12-13T23:58:59Z"
            }
          ]
        }
      ]
    },
    {
      "number": 33,
      "id": "PR_kwDOEpUZs84v1DOA",
      "title": "Add contextString variable",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/33",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And add missing reference from #32.",
      "createdAt": "2021-12-14T15:00:46Z",
      "updatedAt": "2021-12-14T15:53:04Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "d44e648edcd9f6b18d589c8058f600728b8d15da",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/add-context",
      "headRefOid": "f7e2eb42c6a2d729d0196a7ee21c77b238d19193",
      "closedAt": "2021-12-14T15:53:04Z",
      "mergedAt": "2021-12-14T15:53:04Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "97bd6c0017584b3593734b26f5be964e29d33916"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84xkqXF",
          "commit": {
            "abbreviatedOid": "c82b4ca"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-14T15:50:06Z",
          "updatedAt": "2021-12-14T15:50:25Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\nThe value of the contextString parameter is \"FROST-RISTRETTO255-SHA512\".\n```\n",
              "createdAt": "2021-12-14T15:50:06Z",
              "updatedAt": "2021-12-14T15:50:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOEpUZs84v1Lgm",
      "title": "EdX interop",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/34",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This aligns signature generation and verification with that of [EdX from RFC8032](https://datatracker.ietf.org/doc/html/rfc8032). ",
      "createdAt": "2021-12-14T15:33:06Z",
      "updatedAt": "2021-12-14T19:56:15Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "d44e648edcd9f6b18d589c8058f600728b8d15da",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/edx-alignment",
      "headRefOid": "d0d9c5bf2962f30c42f500df08ca08194e080fbb",
      "closedAt": "2021-12-14T19:56:12Z",
      "mergedAt": "2021-12-14T19:56:12Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "3bdaa22d7485cdc4adbfb947b530e56b639aa9d0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84xllyN",
          "commit": {
            "abbreviatedOid": "d0d9c5b"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks great to me, thank you \ud83c\udf8a ",
          "createdAt": "2021-12-14T19:20:23Z",
          "updatedAt": "2021-12-14T19:20:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84xluYr",
          "commit": {
            "abbreviatedOid": "d0d9c5b"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-14T19:56:05Z",
          "updatedAt": "2021-12-14T19:56:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 35,
      "id": "PR_kwDOEpUZs84v2Xne",
      "title": "Stop adding teor to every PR as a reviewer",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/35",
      "state": "MERGED",
      "author": "teor2345",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This removes teor from the CODEOWNERS file, so I don't get added as a reviewer to every PR.",
      "createdAt": "2021-12-14T21:12:11Z",
      "updatedAt": "2021-12-14T21:17:46Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "3bdaa22d7485cdc4adbfb947b530e56b639aa9d0",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "stop-adding-teor-reviews",
      "headRefOid": "2f254ed7dd4b6fa118a43d9480640d68ed36d9df",
      "closedAt": "2021-12-14T21:17:44Z",
      "mergedAt": "2021-12-14T21:17:43Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "5bcf68714f4260149388d885f781f778a41fecb1"
      },
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @teor2345, sorry about that! ",
          "createdAt": "2021-12-14T21:17:39Z",
          "updatedAt": "2021-12-14T21:17:39Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 36,
      "id": "PR_kwDOEpUZs84w5CPT",
      "title": "Typo",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/36",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-01-13T01:07:09Z",
      "updatedAt": "2022-01-13T02:20:27Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "5bcf68714f4260149388d885f781f778a41fecb1",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dconnolly-patch-1",
      "headRefOid": "0a570ef7a244dd735c3202e5d52f9dbaaecfbd2e",
      "closedAt": "2022-01-13T02:20:25Z",
      "mergedAt": "2022-01-13T02:20:25Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "9c9b76280aa433b08f576760c6b81cfe83947d10"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84yvBlk",
          "commit": {
            "abbreviatedOid": "0a570ef"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-13T02:20:18Z",
          "updatedAt": "2022-01-13T02:20:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDOEpUZs84w5JWS",
      "title": "Rough description of performing the protocol without the aggregator",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/39",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #25",
      "createdAt": "2022-01-13T01:39:07Z",
      "updatedAt": "2022-01-18T20:00:26Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "5bcf68714f4260149388d885f781f778a41fecb1",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "no-aggregator",
      "headRefOid": "c58e4bf53fa5d30769034779b7f002c79803fe89",
      "closedAt": "2022-01-18T20:00:22Z",
      "mergedAt": "2022-01-18T20:00:22Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "38e8fa7a19f2778b4b2fd6c8a3eeb309dc7a8cfb"
      },
      "comments": [
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed the comment from @chris-wood in the last commit, hopefully this description of the network channel requirements is clear. ",
          "createdAt": "2022-01-18T20:00:17Z",
          "updatedAt": "2022-01-18T20:00:17Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84yy_B3",
          "commit": {
            "abbreviatedOid": "e874521"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d",
          "createdAt": "2022-01-13T20:50:05Z",
          "updatedAt": "2022-01-13T20:50:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84yzbut",
          "commit": {
            "abbreviatedOid": "e874521"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This text looks good, though I wonder if we need to expand on the requirements for the broadcast channel? In particular, this is written such that it assumes the broadcast channel (obviously) delivers each message correctly, but I don't think we state that explicitly? (We can do this in a future PR so as to not block this.)",
          "createdAt": "2022-01-13T23:20:04Z",
          "updatedAt": "2022-01-13T23:20:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 46,
      "id": "PR_kwDOEpUZs84w9sYu",
      "title": "Messages should be a fixed size when hashing",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To ensure a fixed size message when calculating `rho` or the sig challenge, always hash the message into a fixed size first.\r\n\r\nAlso consistently use `msg`, and some tidy\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-frost/issues/43",
      "createdAt": "2022-01-13T20:46:52Z",
      "updatedAt": "2022-01-28T21:55:44Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "6f15e3b8ea32696d6e4bca61615fc591283a63bf",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "msg-hashing",
      "headRefOid": "f741b1d10c77b215dba0ec7de09370fa58b72bde",
      "closedAt": "2022-01-28T21:55:41Z",
      "mergedAt": "2022-01-28T21:55:41Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "750a307a437d95418d640db824f444bdd1116279"
      },
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> We need to explicitely define what `H` is, similarly to `H1` and `H2`.\r\n> \r\n> See https://github.com/cfrg/draft-irtf-cfrg-frost/blob/master/draft-irtf-cfrg-frost.md#cryptographic-hash-function-dep-hash\r\n\r\nIs that not specified by each parameter set? ",
          "createdAt": "2022-01-13T22:39:40Z",
          "updatedAt": "2022-01-13T22:39:40Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "> > We need to explicitely define what `H` is, similarly to `H1` and `H2`.\r\n> > See https://github.com/cfrg/draft-irtf-cfrg-frost/blob/master/draft-irtf-cfrg-frost.md#cryptographic-hash-function-dep-hash\r\n> \r\n> Is that not specified by each parameter set?\r\n\r\nWe should have an explicit definition with a domain seperator, to be on the safe side. ",
          "createdAt": "2022-01-13T22:43:55Z",
          "updatedAt": "2022-01-13T22:43:55Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@chelseakomlo it is explicitly defined as part of the ciphersuite, so I don't think further work is needed there.",
          "createdAt": "2022-01-13T22:54:40Z",
          "updatedAt": "2022-01-13T22:54:40Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed!\r\n",
          "createdAt": "2022-01-28T21:55:32Z",
          "updatedAt": "2022-01-28T21:55:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84yzMg4",
          "commit": {
            "abbreviatedOid": "801db01"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "We need to explicitely define what `H` is, similarly to `H1` and `H2`. \r\n\r\nSee https://github.com/cfrg/draft-irtf-cfrg-frost/blob/master/draft-irtf-cfrg-frost.md#cryptographic-hash-function-dep-hash",
          "createdAt": "2022-01-13T21:55:09Z",
          "updatedAt": "2022-01-13T21:55:09Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84zA7LP",
          "commit": {
            "abbreviatedOid": "272c75c"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-18T19:29:23Z",
          "updatedAt": "2022-01-18T19:29:24Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I would add a comment here that a domain seperator is omitted specifically for backwards compatibility and citation.",
              "createdAt": "2022-01-18T19:29:23Z",
              "updatedAt": "2022-01-18T19:29:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84zA7d5",
          "commit": {
            "abbreviatedOid": "272c75c"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Approved, with request for comment on backwards compatibility and choice of `H3`",
          "createdAt": "2022-01-18T19:29:56Z",
          "updatedAt": "2022-01-18T19:29:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84zqPVg",
          "commit": {
            "abbreviatedOid": "272c75c"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-28T21:08:11Z",
          "updatedAt": "2022-01-28T21:08:12Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nH3(m) = H(m)\r\n\r\nNormally this would also include a domain separator, but for backwards compatibility with other Schnorr signatures, we omit it here.\r\n```",
              "createdAt": "2022-01-28T21:08:11Z",
              "updatedAt": "2022-01-28T21:08:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 52,
      "id": "PR_kwDOEpUZs84xObFo",
      "title": "Update order of rho with regard to participant identifiers",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/52",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #17 ",
      "createdAt": "2022-01-18T20:48:05Z",
      "updatedAt": "2022-01-25T20:39:54Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "38e8fa7a19f2778b4b2fd6c8a3eeb309dc7a8cfb",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "order-rho",
      "headRefOid": "89e3a47efd2f8f0d9753853a90d7793368c20b26",
      "closedAt": "2022-01-25T20:38:19Z",
      "mergedAt": "2022-01-25T20:38:19Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "34dc444633489c8687440cc3e04edb408f1e1bcb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84zbdSy",
          "commit": {
            "abbreviatedOid": "89e3a47"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Good for now, if anyone runs into any confusion about the j, D_j, etc order, we can clarify further",
          "createdAt": "2022-01-25T20:36:15Z",
          "updatedAt": "2022-01-25T20:36:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOEpUZs84xsnRP",
      "title": "Draft fixes and initial Sage implementation",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/53",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The Sage implementation (in poc/frost.sage) is still a bit behind the spec, e.g., H1 and H2 are not correct. Test vectors are still TBD. We can either add them here or in a followup change. There's a couple general questions and comments that came up when making this change, including:\r\n\r\n- Why is signature share verification _optional_, as opposed to mandatory? It's pretty cheap, so I'm inclined to think we should make it mandatory.\r\n- Is the current blinding factor generation specification correct?\r\n- We currently say the upper bound on signing message limit is 2^16-1 -- is this sufficiently large?\r\n- What should be the maximum number of possible signers? 2^64-1?\r\n- We need to improve the vocabulary in the draft, e.g., `B` to denote the set of signer commitments. Can we come up with a better name?\r\n- ... and probably some others I forgot in the process.\r\n\r\n@dconnolly I suspect this won't interop with your ristretto255 implementation, but that's probably fine for now. I want to get. us to an initial place where we have test vectors from the Sage implementation that match the spec. Then we can change things as needed to converge (and work towards RFC8032 compatibility). ",
      "createdAt": "2022-01-27T18:41:00Z",
      "updatedAt": "2022-01-29T00:57:02Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "750a307a437d95418d640db824f444bdd1116279",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/fixes-and-poc",
      "headRefOid": "105c3aaf93261754965c9717d027f8d2455a35a3",
      "closedAt": "2022-01-29T00:57:01Z",
      "mergedAt": "2022-01-29T00:57:01Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b2a7d2eed48fec2afcd881c685231adf0c9056a0"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly I rebased on top of `master` and pulled in your change. I'll merge this now and focus on test vector capabilities next. Then I'll focus on RFC8032 compatibility. ",
          "createdAt": "2022-01-29T00:56:31Z",
          "updatedAt": "2022-01-29T00:56:31Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84zqZf-",
          "commit": {
            "abbreviatedOid": "3d7265f"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-28T22:07:31Z",
          "updatedAt": "2022-01-28T22:07:31Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Three, to be specific",
              "createdAt": "2022-01-28T22:07:31Z",
              "updatedAt": "2022-01-28T22:07:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84zqabu",
          "commit": {
            "abbreviatedOid": "3d7265f"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good! ",
          "createdAt": "2022-01-28T22:13:40Z",
          "updatedAt": "2022-01-28T22:13:40Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84zqqFd",
          "commit": {
            "abbreviatedOid": "105c3aa"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-29T00:56:41Z",
          "updatedAt": "2022-01-29T00:56:42Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Rebased and fixed.",
              "createdAt": "2022-01-29T00:56:41Z",
              "updatedAt": "2022-01-29T00:56:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 59,
      "id": "PR_kwDOEpUZs84xxBU-",
      "title": "Must verify signature shares",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/59",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "... and other editorial things.\r\n\r\nCloses #54.",
      "createdAt": "2022-01-29T01:07:56Z",
      "updatedAt": "2022-01-31T14:58:16Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "b2a7d2eed48fec2afcd881c685231adf0c9056a0",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/must-verify-shares",
      "headRefOid": "af648871345eaaf281ed8818c546d9abc06926a1",
      "closedAt": "2022-01-31T14:58:11Z",
      "mergedAt": "2022-01-31T14:58:11Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "c650e456f649701b6e5947a170d30d100fb6e605"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84zqqp0",
          "commit": {
            "abbreviatedOid": "af64887"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-29T01:08:20Z",
          "updatedAt": "2022-01-29T01:08:20Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "@dconnolly @chelseakomlo this is the real change.",
              "createdAt": "2022-01-29T01:08:20Z",
              "updatedAt": "2022-01-29T01:08:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84zvAas",
          "commit": {
            "abbreviatedOid": "af64887"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks great to me",
          "createdAt": "2022-01-31T14:58:03Z",
          "updatedAt": "2022-01-31T14:58:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOEpUZs84xx1CW",
      "title": "Add bare test vectors",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/60",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "First part of #49. It adds test vector generation for ristretto255 with one (2,3) participant configuration. We can extend this in a followup change to iterate through more subsets. Of course, I'm open to renaming or restructuring anything differently!\r\n\r\nExample output:\r\n\r\n```\r\n{\r\n  \"config\": {\r\n    \"NUM_SIGNERS\": \"3\",\r\n    \"THRESHOLD_LIMIT\": \"2\",\r\n    \"group\": \"ristretto255\",\r\n    \"hash\": \"SHA512\"\r\n  },\r\n  \"inputs\": {\r\n    \"group_secret_key\": \"c604c785ada70d77a5256ae21767de8c3304115237d262134f5e46e512cf8e03\",\r\n    \"group_public_key\": \"0ca5c9fa211b6c240e4e7af6c6cf624c7b0fd1f8916eacbb6518267f332db951\",\r\n    \"message\": \"74657374\",\r\n    \"signers\": {\r\n      \"1\": {\r\n        \"signer_share\": \"24dd5ca618a461a81256e505fcd5aaf356b3c45aa479a49cf3744710f306740f\"\r\n      },\r\n      \"2\": {\r\n        \"signer_share\": \"95e1fc69693da381a9e96886014b98457a6278631121e625988b483bd33e590b\"\r\n      },\r\n      \"3\": {\r\n        \"signer_share\": \"06e69c2dbad6e45a407dec0607c085979d112c6c7ec827af3ca24966b3763e07\"\r\n      }\r\n    }\r\n  },\r\n  \"round_one_outputs\": {\r\n    \"participants\": [\r\n      \"1\",\r\n      \"2\"\r\n    ],\r\n    \"commitment_list\": \"000000018a9049503ade17c922b4ab93e0fd7802f8986ee4cdd25d7e2da2691139160c15eee7a9c7fec3460c27c160c683d46a4fd18f537c055c3998748b8e4cd8f29b3e00000002d88068bbb009b13a005e66b143d52591f4081f4b3b342ebc4035af868ba82f7b3647dbbc9e46bd45cd1fe21d6197971b84e3ae2a7a165aaade49ee2ebf1eba5a\",\r\n    \"group_blinding_factor\": \"675146437df1bbc42f8fa74673c2c6a5393bb469a02c1402d497428575b55900\",\r\n    \"outputs\": {\r\n      \"1\": {\r\n        \"hiding_nonce\": \"ed8366feb6b1d05d1f46acb727061e43aadfafe9c10e5a64e7518d63e3263503\",\r\n        \"blinding_nonce\": \"019cbd1d7420292528f8cdd62f339fdabb602f04a95dac9dbcec831b8c681a09\",\r\n        \"hiding_nonce_commitment\": \"8a9049503ade17c922b4ab93e0fd7802f8986ee4cdd25d7e2da2691139160c15\",\r\n        \"blinding_nonce_commitment\": \"eee7a9c7fec3460c27c160c683d46a4fd18f537c055c3998748b8e4cd8f29b3e\"\r\n      },\r\n      \"2\": {\r\n        \"hiding_nonce\": \"89c61a42c8191a5ca41f2fe959843d333bcf43173b7de4c5c119e0e0d8b0e707\",\r\n        \"blinding_nonce\": \"e6d0f1d89ad552e383d6c6f4e8598cc3037d6e274d22da3089e7afbd4171ea02\",\r\n        \"hiding_nonce_commitment\": \"d88068bbb009b13a005e66b143d52591f4081f4b3b342ebc4035af868ba82f7b\",\r\n        \"blinding_nonce_commitment\": \"3647dbbc9e46bd45cd1fe21d6197971b84e3ae2a7a165aaade49ee2ebf1eba5a\"\r\n      }\r\n    }\r\n  },\r\n  \"round_two_outputs\": {\r\n    \"participants\": [\r\n      \"1\",\r\n      \"2\"\r\n    ],\r\n    \"outputs\": {\r\n      \"1\": {\r\n        \"sig_share\": \"949f570b01bb3da189e1138fa4a1637ebaef75afb7ba97a0e1e147e204a3c800\",\r\n        \"group_commitment_share\": \"aad18ee8e1aa4e0a1fc5da36aab1ed0b138a503e14a2dba771b2c170efd00f34\"\r\n      },\r\n      \"2\": {\r\n        \"sig_share\": \"0bbfe9944fa5e6f9aefe5b663598719305e0aad0f9e438318bce9e9f281e7d01\",\r\n        \"group_commitment_share\": \"8613328b9f574fdf988f60593da63ad3d2645ab62010048dccf65b6c3504a60a\"\r\n      }\r\n    }\r\n  },\r\n  \"final_output\": {\r\n    \"sig\": {\r\n      \"R\": \"828e92dec234c47d60f9fc4b2bb6c794b06e83d0a6be9479dd8e3fc66c69cf3e\",\r\n      \"z\": \"9f5e41a05060249b38e06ff5d939d511c0cf2080b19fd0d16cb0e6812dc14502\"\r\n    }\r\n  }\r\n}\r\n```",
      "createdAt": "2022-01-29T14:57:44Z",
      "updatedAt": "2022-02-01T20:04:25Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "c650e456f649701b6e5947a170d30d100fb6e605",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/bare-vectors",
      "headRefOid": "ddf19b14f5ec08d1b2e3e8962e2844e4d3bbe486",
      "closedAt": "2022-02-01T13:53:48Z",
      "mergedAt": "2022-02-01T13:53:48Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ea438bae97198bce95c247e0aa3183ef331d6937"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly are there any changes you'd like to see?",
          "createdAt": "2022-01-31T23:56:18Z",
          "updatedAt": "2022-01-31T23:56:18Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "In the example output, the message is the ascii bytes of \"test\" ?\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-frost/pull/60/files#diff-b6283431df51877348499b43b450f92d66069e6e453423a3a35b949720801d3aR201",
          "createdAt": "2022-02-01T07:56:11Z",
          "updatedAt": "2022-02-01T07:56:11Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> In the example output, the message is the ascii bytes of \"test\" ?\n> \n> \n\nYep, that's right. I figured it was best to use a consistent encoding (hex) for all values. ",
          "createdAt": "2022-02-01T13:28:24Z",
          "updatedAt": "2022-02-01T13:28:24Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84zxEAf",
          "commit": {
            "abbreviatedOid": "ddf19b1"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-31T22:40:41Z",
          "updatedAt": "2022-01-31T22:40:42Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-01-31T22:40:41Z",
              "updatedAt": "2022-01-31T22:40:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84zxECg",
          "commit": {
            "abbreviatedOid": "ddf19b1"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-31T22:40:52Z",
          "updatedAt": "2022-01-31T22:40:53Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-01-31T22:40:52Z",
              "updatedAt": "2022-01-31T22:40:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84zxEFF",
          "commit": {
            "abbreviatedOid": "ddf19b1"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-31T22:41:06Z",
          "updatedAt": "2022-01-31T22:41:07Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-01-31T22:41:06Z",
              "updatedAt": "2022-01-31T22:41:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84zyFmc",
          "commit": {
            "abbreviatedOid": "ddf19b1"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks great, just one q about how we're representing the message in the vector outputs",
          "createdAt": "2022-02-01T07:58:37Z",
          "updatedAt": "2022-02-01T07:58:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOEpUZs84x2ReU",
      "title": "Limit number of signers to 2^16-1.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/61",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #56.",
      "createdAt": "2022-01-31T16:09:04Z",
      "updatedAt": "2022-01-31T18:48:54Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "c650e456f649701b6e5947a170d30d100fb6e605",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/signer-limit",
      "headRefOid": "b29cf8ad7d37f83a11b2414624103c79d6ee42d5",
      "closedAt": "2022-01-31T18:48:50Z",
      "mergedAt": "2022-01-31T18:48:50Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "67131ee827afe17c3e1fb385b07ed5d23cd2f8de"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84zwOhU",
          "commit": {
            "abbreviatedOid": "b29cf8a"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-31T18:48:41Z",
          "updatedAt": "2022-01-31T18:48:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 62,
      "id": "PR_kwDOEpUZs84x56R_",
      "title": "RFC8032 compat with some open questions",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/62",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This demonstrates RFC8032 compliance (for vanilla Ed25519, not the ctx or ph variants). To do so, it creates a signature using the reference implementation, encodes the signature and public key as RFC8032 expects, and then calls the signature verification routine [from the RFC](https://datatracker.ietf.org/doc/html/rfc8032#section-6).\r\n\r\nThis change raises a couple of questions (to me), including:\r\n1. The pre-hash step introduced in [this PR](https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46), to address [this issue](https://github.com/cfrg/draft-irtf-cfrg-frost/issues/43), meant that the vanilla ed25519 interop wouldn't work. (Vanilla ed25519 doesn't pre-hash the message when computing the challenge.) I think we got the change in #46 wrong. [The audit](https://github.com/ZcashFoundation/redjubjub/blob/main/zcash-frost-audit-report-20210323.pdf) only recommends this pre-hashing step when computing the blinding factor, not when computing the challenge, so I _think_ we could revert the pre-hashing step for the challenge.\r\n1. Do we want to specify a pile of different variants like RFC8032 did, including \"vanilla\" mode (Ed25519), pre-hash (ph) mode (Ed25519ph), and context-specific (ctx) mode (Ed25519ctx)? It seems like a lot of complexity to do everything, and to be honest I'm not sure what variant is most useful in practice. Does anyone else know?\r\n1. What is our API abstraction boundary? EdDSA uses byte strings everywhere, including signing and verifying keys, as well as signatures. Currently, we operate on \"internal\" types, e.g., scalars and elements for signing and verifying keys, respectively, and our signatures are (element, scalar) tuples. Should we adopt a higher layer of abstraction?\r\n1. Signature verification in this change was updated to match the logic in RFC8032. That is, rather than re-derive the group commitment and check for equality, check that the relation holds `[8][S]B = [8]R + [8][k]A'`.\r\n1. How do we want to handle domain separation for H1 and H2 for ciphersuites that target groups outside of RFC8032? \r\n\r\nStarting as a draft for now until we figure out what to do about (1), since I commented out the pre-hashing step in the code. I don't think we need to block on any of the remaining questions.\r\n\r\ncc @veorq in case he has thoughts on (1)",
      "createdAt": "2022-02-01T14:11:08Z",
      "updatedAt": "2022-02-04T15:05:16Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "872a7082d9ea33596b72d47a2d9ce906df25af06",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/rfc8032-compat",
      "headRefOid": "36c2b9043000beccc6e4f2551963a3dd7ba66ccf",
      "closedAt": "2022-02-04T01:20:39Z",
      "mergedAt": "2022-02-04T01:20:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9cf547200e7a0c18f24a3a2a32a51c2a8167fda0"
      },
      "comments": [
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> 1. The pre-hash step introduced in [this PR](https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46), to address [this issue](https://github.com/cfrg/draft-irtf-cfrg-frost/issues/43), meant that the vanilla ed25519 interop wouldn't work. (Vanilla ed25519 doesn't pre-hash the message when computing the challenge.) I think we got the change in [Messages should be a fixed size when hashing\u00a0#46](https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46) wrong. [The audit](https://github.com/ZcashFoundation/redjubjub/blob/main/zcash-frost-audit-report-20210323.pdf) only recommends this pre-hashing step when computing the blinding factor, not when computing the challenge, so I _think_ we could revert the pre-hashing step for the challenge.\r\n\r\nYes I think this is correct. @chelseakomlo can confirm\r\n\r\n\r\n",
          "createdAt": "2022-02-03T07:18:06Z",
          "updatedAt": "2022-02-03T07:18:06Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> 2\\. Do we want to specify a pile of different variants like RFC8032 did, including \"vanilla\" mode (Ed25519), pre-hash (ph) mode (Ed25519ph), and context-specific (ctx) mode (Ed25519ctx)? It seems like a lot of complexity to do everything, and to be honest I'm not sure what variant is most useful in practice. Does anyone else know?\r\n\r\nI don't think we want to go far with this. Looking at [ed25519-dalek](https://docs.rs/ed25519-dalek/latest/ed25519_dalek/), and the [`RustCrypto/ed25519` API](https://github.com/RustCrypto/signatures/blob/master/ed25519/src/lib.rs), and the [`ring_compat` ed25519 API](https://docs.rs/ring-compat/latest/ring_compat/signature/trait.Signer.html#tymethod.try_sign), they just sign a message that is an arbitrary set of bytes, nothing explicit about prehashing, or ctx mode. Feels like we should keep it simple as possible while remaining compatible with APIs like those.\r\n\r\n",
          "createdAt": "2022-02-03T07:27:48Z",
          "updatedAt": "2022-02-03T07:27:48Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> 3\\. What is our API abstraction boundary? EdDSA uses byte strings everywhere, including signing and verifying keys, as well as signatures. Currently, we operate on \"internal\" types, e.g., scalars and elements for signing and verifying keys, respectively, and our signatures are (element, scalar) tuples. Should we adopt a higher layer of abstraction?\r\n\r\nThe `Signature` is parsed into algebraic structures from 64 bytes, similar for the `VerifyingKey`s, etc. Maybe we make the serialization \"pattern\" of these explicit like we do for the `SigningShare`, `SigningPackage`, etc message types, but not getting too deep because then we have to make them explicit per parameter set?",
          "createdAt": "2022-02-03T07:32:37Z",
          "updatedAt": "2022-02-03T07:32:37Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> 5\\. How do we want to handle domain separation for H1 and H2 for ciphersuites that target groups outside of RFC8032?\r\n\r\nNot sure I understand",
          "createdAt": "2022-02-03T07:37:55Z",
          "updatedAt": "2022-02-03T07:37:55Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "> 4\\. Signature verification in this change was updated to match the logic in RFC8032. That is, rather than re-derive the group commitment and check for equality, check that the relation holds `[8][S]B = [8]R + [8][k]A'`.\r\n\r\nI think the code looks ok, @chelseakomlo may want to look at the verification tweak",
          "createdAt": "2022-02-03T07:47:55Z",
          "updatedAt": "2022-02-03T07:48:22Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> The Signature is parsed into algebraic structures from 64 bytes, similar for the VerifyingKeys, etc. Maybe we make the serialization \"pattern\" of these explicit like we do for the SigningShare, SigningPackage, etc message types, but not getting too deep because then we have to make them explicit per parameter set?\r\n\r\nI'm not really sure I followed this. Having thought on this some more, I suggest we stick with the interface we have right now and then file a separate issue to further refine this down the road based on RG feedback.",
          "createdAt": "2022-02-03T14:08:18Z",
          "updatedAt": "2022-02-03T14:08:18Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> > 4. Signature verification in this change was updated to match the logic in RFC8032. That is, rather than re-derive the group commitment and check for equality, check that the relation holds `[8][S]B = [8]R + [8][k]A'`.\r\n> \r\n> I think the code looks ok, @chelseakomlo may want to look at the verification tweak\r\n\r\nMaybe @hdevalence has an opinion on which validation check is preferred? =)",
          "createdAt": "2022-02-03T14:09:12Z",
          "updatedAt": "2022-02-03T14:09:12Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> > 5. How do we want to handle domain separation for H1 and H2 for ciphersuites that target groups outside of RFC8032?\r\n>\r\n> Not sure I understand\r\n\r\nAh, sorry, I was basically asking if we wanted to keep the H1/H2 definitions we have in the draft, which fold in `contextString` and a string (`\"rho\"` or `\"chal\"`), for groups that are not targeting RFC8032. H2 is the hash we use for generating the challenge, so for RFC8032 compatibility, I don't think we can do as the draft currently describes. (Indeed, the code in this PR doesn't do it.) Does that clarify? ",
          "createdAt": "2022-02-03T14:11:03Z",
          "updatedAt": "2022-02-03T14:11:51Z"
        },
        {
          "author": "hdevalence",
          "authorAssociation": "NONE",
          "body": "> > > 4. Signature verification in this change was updated to match the logic in RFC8032. That is, rather than re-derive the group commitment and check for equality, check that the relation holds `[8][S]B = [8]R + [8][k]A'`.\r\n> \r\n> Maybe @hdevalence has an opinion on which validation check is preferred? =)\r\n\r\nHey, I don't have a lot of context, so discount this drive-by comment as appropriate, but I'm wondering to what extent it's actually important for a FROST specification to specify the verification check?  To me, one of the big benefits of FROST or other threshold signature constructions is that they produce signatures that look and act just like normal signatures (because they are just normal signatures) -- the part that is distinct and special is in the *creation* of those signatures.  So my assumption would be that it's better not to specify verification at all, except by reference to the method used by whatever signature scheme is in use (i.e., rather than trying to match RFC8032 exactly, just refer to it).\r\n\r\nOtherwise, my opinion would be to use the ZIP215-style validation checks, but again, this is a drive-by comment, so feel free to discount it as appropriate, it's certainly possible that there's context I'm missing.",
          "createdAt": "2022-02-03T18:06:17Z",
          "updatedAt": "2022-02-03T18:06:17Z"
        },
        {
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "body": "> > 1. The pre-hash step introduced in [this PR](https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46), to address [this issue](https://github.com/cfrg/draft-irtf-cfrg-frost/issues/43), meant that the vanilla ed25519 interop wouldn't work. (Vanilla ed25519 doesn't pre-hash the message when computing the challenge.) I think we got the change in [Messages should be a fixed size when hashing\u00a0#46](https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46) wrong. [The audit](https://github.com/ZcashFoundation/redjubjub/blob/main/zcash-frost-audit-report-20210323.pdf) only recommends this pre-hashing step when computing the blinding factor, not when computing the challenge, so I _think_ we could revert the pre-hashing step for the challenge.\r\n> \r\n> Yes I think this is correct. @chelseakomlo can confirm\r\n\r\nYes, I'm fine with this change.",
          "createdAt": "2022-02-03T19:27:12Z",
          "updatedAt": "2022-02-03T19:27:12Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Hey, I don't have a lot of context, so discount this drive-by comment as appropriate, but I'm wondering to what extent it's actually important for a FROST specification to specify the verification check? To me, one of the big benefits of FROST or other threshold signature constructions is that they produce signatures that look and act just like normal signatures (because they are just normal signatures) -- the part that is distinct and special is in the creation of those signatures. \r\n\r\nThanks for chiming in! This is a fair question. If we were only targeting RFC8032, then I agree that specifying verification would be redundant. However, one of the established goals -- which may certainly change -- is to support ciphersuites based on NIST curves (P-256) and ristretto255. As RFC8032 does not apply to these variants, we needed to include the verification algorithm.\r\n\r\nI'm not really familiar with the ZIP215-style validation checks, but I'll take a look. \ud83d\udc4d ",
          "createdAt": "2022-02-03T19:29:45Z",
          "updatedAt": "2022-02-03T19:29:45Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@chelseakomlo addressed your comments -- thanks!",
          "createdAt": "2022-02-03T22:10:41Z",
          "updatedAt": "2022-02-03T22:10:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84z8V4c",
          "commit": {
            "abbreviatedOid": "af54557"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T07:33:54Z",
          "updatedAt": "2022-02-03T07:33:54Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Re: \r\n\r\n>The pre-hash step introduced in https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46, to address https://github.com/cfrg/draft-irtf-cfrg-frost/issues/43, meant that the vanilla ed25519 interop wouldn't work. (Vanilla ed25519 doesn't pre-hash the message when computing the challenge.) I think we got the change in https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46 wrong. [The audit](https://github.com/ZcashFoundation/redjubjub/blob/main/zcash-frost-audit-report-20210323.pdf) only recommends this pre-hashing step when computing the blinding factor, not when computing the challenge, so I think we could revert the pre-hashing step for the challenge.",
              "createdAt": "2022-02-03T07:33:54Z",
              "updatedAt": "2022-02-03T07:33:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84z8WBz",
          "commit": {
            "abbreviatedOid": "af54557"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T07:34:44Z",
          "updatedAt": "2022-02-03T07:34:44Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "\ud83d\udc40 ",
              "createdAt": "2022-02-03T07:34:44Z",
              "updatedAt": "2022-02-03T07:34:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84z8WJo",
          "commit": {
            "abbreviatedOid": "af54557"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T07:35:24Z",
          "updatedAt": "2022-02-03T07:35:25Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "re:\r\n\r\n> The pre-hash step introduced in https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46, to address https://github.com/cfrg/draft-irtf-cfrg-frost/issues/43, meant that the vanilla ed25519 interop wouldn't work. (Vanilla ed25519 doesn't pre-hash the message when computing the challenge.) I think we got the change in https://github.com/cfrg/draft-irtf-cfrg-frost/pull/46 wrong. [The audit](https://github.com/ZcashFoundation/redjubjub/blob/main/zcash-frost-audit-report-20210323.pdf) only recommends this pre-hashing step when computing the blinding factor, not when computing the challenge, so I think we could revert the pre-hashing step for the challenge.",
              "createdAt": "2022-02-03T07:35:24Z",
              "updatedAt": "2022-02-03T07:35:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84z9_Nj",
          "commit": {
            "abbreviatedOid": "e1893d0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T14:06:50Z",
          "updatedAt": "2022-02-03T14:06:50Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Yeah, if we agree that we should revert this change, I'll tidy up this code and fix the main spec.",
              "createdAt": "2022-02-03T14:06:50Z",
              "updatedAt": "2022-02-03T14:06:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84z9_Yd",
          "commit": {
            "abbreviatedOid": "e1893d0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T14:07:21Z",
          "updatedAt": "2022-02-03T14:07:21Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "I'll tidy this up before I promote this PR for real review.",
              "createdAt": "2022-02-03T14:07:21Z",
              "updatedAt": "2022-02-03T14:07:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84z9_dm",
          "commit": {
            "abbreviatedOid": "e1893d0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T14:07:28Z",
          "updatedAt": "2022-02-03T14:07:29Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "(Same comment as above)",
              "createdAt": "2022-02-03T14:07:29Z",
              "updatedAt": "2022-02-03T14:07:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AF8u",
          "commit": {
            "abbreviatedOid": "3ff8b48"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good with these changes. Thanks for this huge effort.",
          "createdAt": "2022-02-03T21:35:09Z",
          "updatedAt": "2022-02-03T21:59:36Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "The `x,y` need to have subscript `i`s on them",
              "createdAt": "2022-02-03T21:35:09Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 133,
              "body": "Need subscript `j`s on the `(x,y)` values; same for values below.",
              "createdAt": "2022-02-03T21:37:25Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 143,
              "body": "Shouldn't this be \"are Scalar and Element values respectively\", if I'm reading this correctly?",
              "createdAt": "2022-02-03T21:39:17Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 153,
              "body": "Swap out `B` for `commitment_list`, no?",
              "createdAt": "2022-02-03T21:39:42Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 163,
              "body": "We need this to be either `H1,H2,H3`",
              "createdAt": "2022-02-03T21:40:29Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 205,
              "body": "Needs to be `H1/H2/H3`",
              "createdAt": "2022-02-03T21:41:21Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 212,
              "body": "Capital R_i",
              "createdAt": "2022-02-03T21:42:03Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 59,
              "body": "`H3` is an alias for `H` due to backwards compatibility reasons with {{!RFC8032}}",
              "createdAt": "2022-02-03T21:50:02Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 85,
              "body": "If you are feeling up for it, `participant_index` is more accurate, as opposed to just the ordering of the list.",
              "createdAt": "2022-02-03T21:52:29Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 99,
              "body": "Do you need the \"for each signer\" specification again at the end of this sentence?",
              "createdAt": "2022-02-03T21:53:06Z",
              "updatedAt": "2022-02-03T21:59:36Z"
            },
            {
              "originalPosition": 136,
              "body": "This list MUST be sorted in ascending order with respect to the participant identifier.",
              "createdAt": "2022-02-03T21:53:53Z",
              "updatedAt": "2022-02-03T21:59:37Z"
            },
            {
              "originalPosition": 236,
              "body": "Shouldn't you specify the input for `H2` as you did on line 672 for `H1`?",
              "createdAt": "2022-02-03T21:56:58Z",
              "updatedAt": "2022-02-03T21:59:37Z"
            },
            {
              "originalPosition": 236,
              "body": "Also, I seem to recall that the public key is also hashed into H2. Double checking that is not the case here.",
              "createdAt": "2022-02-03T21:58:33Z",
              "updatedAt": "2022-02-03T21:59:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840ALh9",
          "commit": {
            "abbreviatedOid": "3ff8b48"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:00:53Z",
          "updatedAt": "2022-02-03T22:00:53Z",
          "comments": [
            {
              "originalPosition": 143,
              "body": "Oh, yes, duh.",
              "createdAt": "2022-02-03T22:00:53Z",
              "updatedAt": "2022-02-03T22:00:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840ALjQ",
          "commit": {
            "abbreviatedOid": "3ff8b48"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:01:00Z",
          "updatedAt": "2022-02-03T22:01:00Z",
          "comments": [
            {
              "originalPosition": 153,
              "body": "Yep, thanks, missed this one.",
              "createdAt": "2022-02-03T22:01:00Z",
              "updatedAt": "2022-02-03T22:01:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AMDF",
          "commit": {
            "abbreviatedOid": "3ff8b48"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:03:15Z",
          "updatedAt": "2022-02-03T22:03:15Z",
          "comments": [
            {
              "originalPosition": 236,
              "body": "No -- this is specifically done for compatibility with RFC8032.",
              "createdAt": "2022-02-03T22:03:15Z",
              "updatedAt": "2022-02-03T22:03:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AMOR",
          "commit": {
            "abbreviatedOid": "3ff8b48"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:04:04Z",
          "updatedAt": "2022-02-03T22:04:04Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "What do we want H3 to be for non-RFC8032 suites?",
              "createdAt": "2022-02-03T22:04:04Z",
              "updatedAt": "2022-02-03T22:04:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AMqf",
          "commit": {
            "abbreviatedOid": "3ff8b48"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:06:06Z",
          "updatedAt": "2022-02-03T22:06:07Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "`index` is the notation used in the parameter description, so I'll leave this as-is for now.",
              "createdAt": "2022-02-03T22:06:07Z",
              "updatedAt": "2022-02-03T22:06:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AMtX",
          "commit": {
            "abbreviatedOid": "3ff8b48"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:06:21Z",
          "updatedAt": "2022-02-03T22:06:21Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "I picked something arbitrary for domain separation of H3 with these suites.",
              "createdAt": "2022-02-03T22:06:21Z",
              "updatedAt": "2022-02-03T22:06:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AOBC",
          "commit": {
            "abbreviatedOid": "a7a36b4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:12:54Z",
          "updatedAt": "2022-02-03T22:12:54Z",
          "comments": [
            {
              "originalPosition": 205,
              "body": "Thanks, yeah, I forgot to undo this change!",
              "createdAt": "2022-02-03T22:12:54Z",
              "updatedAt": "2022-02-03T22:12:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AODO",
          "commit": {
            "abbreviatedOid": "a7a36b4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-03T22:13:06Z",
          "updatedAt": "2022-02-03T22:13:06Z",
          "comments": [
            {
              "originalPosition": 163,
              "body": "(See below)",
              "createdAt": "2022-02-03T22:13:06Z",
              "updatedAt": "2022-02-03T22:13:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Am5K",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:00:45Z",
          "updatedAt": "2022-02-04T01:00:46Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "I worry a little about the use of `x` and `y` because that may be confused with `x`-coordinates / `y`-coordinates of curve group elements (points) in affine coordinates",
              "createdAt": "2022-02-04T01:00:45Z",
              "updatedAt": "2022-02-04T01:00:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Am7f",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:01:05Z",
          "updatedAt": "2022-02-04T01:01:05Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-02-04T01:01:05Z",
              "updatedAt": "2022-02-04T01:01:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Am_M",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:01:31Z",
          "updatedAt": "2022-02-04T01:01:32Z",
          "comments": [
            {
              "originalPosition": 125,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-02-04T01:01:31Z",
              "updatedAt": "2022-02-04T01:01:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AnBb",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:01:47Z",
          "updatedAt": "2022-02-04T01:01:47Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "Same here",
              "createdAt": "2022-02-04T01:01:47Z",
              "updatedAt": "2022-02-04T01:01:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AnDe",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:02:00Z",
          "updatedAt": "2022-02-04T01:02:01Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-02-04T01:02:01Z",
              "updatedAt": "2022-02-04T01:02:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AnDl",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:02:01Z",
          "updatedAt": "2022-02-04T01:02:02Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Yeah, I didn't want to use D/E though, since we dropped that notation. Happy to take suggestions!",
              "createdAt": "2022-02-04T01:02:01Z",
              "updatedAt": "2022-02-04T01:02:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AnGD",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:02:22Z",
          "updatedAt": "2022-02-04T01:02:22Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-02-04T01:02:22Z",
              "updatedAt": "2022-02-04T01:02:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AnJs",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:02:50Z",
          "updatedAt": "2022-02-04T01:02:51Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "Cool, this helps",
              "createdAt": "2022-02-04T01:02:50Z",
              "updatedAt": "2022-02-04T01:02:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AnNH",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-04T01:03:19Z",
          "updatedAt": "2022-02-04T01:03:20Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "Very good",
              "createdAt": "2022-02-04T01:03:19Z",
              "updatedAt": "2022-02-04T01:03:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840AnS9",
          "commit": {
            "abbreviatedOid": "36c2b90"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Tiny q, non-blocking. Yay!",
          "createdAt": "2022-02-04T01:04:02Z",
          "updatedAt": "2022-02-04T01:04:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOEpUZs84x-not",
      "title": "Hash in message into rho",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/63",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-02T16:40:01Z",
      "updatedAt": "2022-02-03T03:37:35Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "ea438bae97198bce95c247e0aa3183ef331d6937",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "rho",
      "headRefOid": "18b05359e4be282686d4f60cf5e9629821ed41a7",
      "closedAt": "2022-02-03T03:37:35Z",
      "mergedAt": "2022-02-03T03:37:35Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "872a7082d9ea33596b72d47a2d9ce906df25af06"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs84z5-e4",
          "commit": {
            "abbreviatedOid": "a9381d1"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-02T16:51:33Z",
          "updatedAt": "2022-02-02T16:51:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84z5_wN",
          "commit": {
            "abbreviatedOid": "a9381d1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "@chelseakomlo please also update the reference implementation!",
          "createdAt": "2022-02-02T16:55:28Z",
          "updatedAt": "2022-02-02T16:55:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs84z74QG",
          "commit": {
            "abbreviatedOid": "6f1147d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-03T03:36:57Z",
          "updatedAt": "2022-02-03T03:37:13Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\n        msg_hash = self.H3(message)\n```\n",
              "createdAt": "2022-02-03T03:36:57Z",
              "updatedAt": "2022-02-03T03:37:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 65,
      "id": "PR_kwDOEpUZs84yDgPg",
      "title": "Add automation to run poc make test",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/65",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-03T23:02:17Z",
      "updatedAt": "2022-02-03T23:15:11Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "872a7082d9ea33596b72d47a2d9ce906df25af06",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "ci",
      "headRefOid": "c89789165aebc71d05cc066672c3e63fa5012fe7",
      "closedAt": "2022-02-03T23:15:09Z",
      "mergedAt": "2022-02-03T23:15:09Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "af8c9651702c14ad8c3b15e40ae72b530110fa7b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 66,
      "id": "PR_kwDOEpUZs84yDkQC",
      "title": "Use sagemath:latest docker image to run make test",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/66",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-03T23:32:18Z",
      "updatedAt": "2022-02-04T22:15:46Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "af8c9651702c14ad8c3b15e40ae72b530110fa7b",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "docker-sage",
      "headRefOid": "91766afb598f124680bdffc18361e5b1851cabf4",
      "closedAt": "2022-02-04T22:15:42Z",
      "mergedAt": "2022-02-04T22:15:42Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "21471bbd339579da93ba14c0b1a4a79e6279c45a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 67,
      "id": "PR_kwDOEpUZs84yFxqg",
      "title": "Format test vectors and include them in the draft",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/67",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #49.",
      "createdAt": "2022-02-04T15:38:44Z",
      "updatedAt": "2022-02-12T01:38:57Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "21471bbd339579da93ba14c0b1a4a79e6279c45a",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/format-vectors",
      "headRefOid": "9cd6bf88fba6f7b2197a971124130eafc4e096ca",
      "closedAt": "2022-02-12T01:38:54Z",
      "mergedAt": "2022-02-12T01:38:54Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "e6767854decbe72ea4b9e9838f7056dd21d795d9"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Rebased.",
          "createdAt": "2022-02-04T22:22:02Z",
          "updatedAt": "2022-02-04T22:22:02Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly I made your suggested name change in this PR. Please have a look!",
          "createdAt": "2022-02-10T14:42:48Z",
          "updatedAt": "2022-02-10T14:42:48Z"
        },
        {
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this name change also happening here?\n\nhttps://github.com/cfrg/draft-irtf-cfrg-frost/pull/67#discussion_r803715421",
          "createdAt": "2022-02-10T15:16:21Z",
          "updatedAt": "2022-02-10T15:16:21Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly yep -- see the latest changes! (I pushed locally but didn't see that I had a conflict, so the commits you see just now are me resolving those conflicts.)",
          "createdAt": "2022-02-10T16:19:40Z",
          "updatedAt": "2022-02-10T16:26:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840Pvkn",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:21:47Z",
          "updatedAt": "2022-02-08T19:21:48Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Should we include these here if we're not using them rn? Maybe if we expand the defined ciphersuites we can bring them back",
              "createdAt": "2022-02-08T19:21:48Z",
              "updatedAt": "2022-02-08T19:21:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840PvsJ",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:22:14Z",
          "updatedAt": "2022-02-08T19:22:14Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-02-08T19:22:14Z",
              "updatedAt": "2022-02-08T19:22:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Pvvs",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:22:27Z",
          "updatedAt": "2022-02-08T19:22:27Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-02-08T19:22:27Z",
              "updatedAt": "2022-02-08T19:22:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840PwNp",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:24:16Z",
          "updatedAt": "2022-02-08T19:24:17Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Should this go after the Signer round one outputs?",
              "createdAt": "2022-02-08T19:24:17Z",
              "updatedAt": "2022-02-08T19:24:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840PxLQ",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:27:58Z",
          "updatedAt": "2022-02-08T19:27:59Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "I think this needs a better name as it's different than just the public commitments being used",
              "createdAt": "2022-02-08T19:27:59Z",
              "updatedAt": "2022-02-08T19:27:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Py9b",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:34:57Z",
          "updatedAt": "2022-02-08T19:34:58Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n  output signature share and group commitment share as produced in {{frost-round-two}}.\r\n```",
              "createdAt": "2022-02-08T19:34:57Z",
              "updatedAt": "2022-02-08T19:34:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P6S6",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T20:03:21Z",
          "updatedAt": "2022-02-08T20:03:21Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Yeah, probably. But let's do that in a separate PR.",
              "createdAt": "2022-02-08T20:03:21Z",
              "updatedAt": "2022-02-08T20:03:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P63V",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T20:05:36Z",
          "updatedAt": "2022-02-08T20:05:37Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Eh, I don't feel strongly. It could.",
              "createdAt": "2022-02-08T20:05:37Z",
              "updatedAt": "2022-02-08T20:05:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P692",
          "commit": {
            "abbreviatedOid": "3f4b408"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T20:06:00Z",
          "updatedAt": "2022-02-08T20:06:00Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "What is \"this\"? Are you referring to `commitment_list` or `participants`?",
              "createdAt": "2022-02-08T20:06:00Z",
              "updatedAt": "2022-02-08T20:06:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Vx38",
          "commit": {
            "abbreviatedOid": "dc3e2d2"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks good to me",
          "createdAt": "2022-02-09T22:23:44Z",
          "updatedAt": "2022-02-09T22:30:42Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I would say \"compatible with\" here.",
              "createdAt": "2022-02-09T22:23:44Z",
              "updatedAt": "2022-02-09T22:30:42Z"
            },
            {
              "originalPosition": 92,
              "body": "Why is this value needed? If it is purely for testing, you might add something about how this value is obtained by performing Shamir.Recover with the participant's secrets. ",
              "createdAt": "2022-02-09T22:26:53Z",
              "updatedAt": "2022-02-09T22:30:42Z"
            },
            {
              "originalPosition": 307,
              "body": "Should we have a test for a different number of signers, just in case? ",
              "createdAt": "2022-02-09T22:27:55Z",
              "updatedAt": "2022-02-09T22:30:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840V1be",
          "commit": {
            "abbreviatedOid": "dc3e2d2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-09T22:42:19Z",
          "updatedAt": "2022-02-09T22:42:19Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nmeant to produce signatures compatible with Ed448 as specified in {{!RFC8032}}.\r\n```",
              "createdAt": "2022-02-09T22:42:19Z",
              "updatedAt": "2022-02-09T22:42:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840V1lV",
          "commit": {
            "abbreviatedOid": "47f24f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-09T22:43:08Z",
          "updatedAt": "2022-02-09T22:43:08Z",
          "comments": [
            {
              "originalPosition": 307,
              "body": "Do you mean a different number for `MAX_SIGNERS`, or `NUM_SIGNERS`? I don't think changing `MAX_SIGNERS` increases test coverage. Changing `NUM_SIGNERS` might, however. I would prefer to do that in a separate PR.",
              "createdAt": "2022-02-09T22:43:08Z",
              "updatedAt": "2022-02-09T22:43:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840V1r6",
          "commit": {
            "abbreviatedOid": "47f24f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-09T22:43:40Z",
          "updatedAt": "2022-02-09T22:43:40Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "Right -- one can test that Shamir recovery yields this group secret. ",
              "createdAt": "2022-02-09T22:43:40Z",
              "updatedAt": "2022-02-09T22:43:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Wg35",
          "commit": {
            "abbreviatedOid": "47f24f7"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-10T04:30:38Z",
          "updatedAt": "2022-02-10T04:30:38Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Sorry, `commitment_list`",
              "createdAt": "2022-02-10T04:30:38Z",
              "updatedAt": "2022-02-10T04:30:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840Yume",
          "commit": {
            "abbreviatedOid": "47f24f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-10T14:13:06Z",
          "updatedAt": "2022-02-10T14:13:07Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "True -- it's the encoded group commitment list plus the message hash. I'll change the name to `binding_factor_input`.",
              "createdAt": "2022-02-10T14:13:06Z",
              "updatedAt": "2022-02-10T14:13:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840f_xd",
          "commit": {
            "abbreviatedOid": "9cd6bf8"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks fantastic, thanks @chris-wood ",
          "createdAt": "2022-02-12T01:38:46Z",
          "updatedAt": "2022-02-12T01:38:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 71,
      "id": "PR_kwDOEpUZs84yLokI",
      "title": "Add Ed448 suite",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/71",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #69.",
      "createdAt": "2022-02-07T16:13:49Z",
      "updatedAt": "2022-02-08T23:44:55Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "caw/format-vectors",
      "baseRefOid": "3f4b408327cf8d4aabf299da41ac80941f10f3dd",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/add-ed448",
      "headRefOid": "5353338acc3e464275b6fcb136cb5fa8177ec70a",
      "closedAt": "2022-02-08T23:44:55Z",
      "mergedAt": "2022-02-08T23:44:55Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "dc3e2d258ff1c9cd51f48a06e067b2ceaf6cd42d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840PDVl",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks good to me, thank you!",
          "createdAt": "2022-02-08T17:03:06Z",
          "updatedAt": "2022-02-08T17:03:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs840PzeN",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:37:00Z",
          "updatedAt": "2022-02-08T19:37:00Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This is `edwards448` here and `ed448` below, should we pick one?",
              "createdAt": "2022-02-08T19:37:00Z",
              "updatedAt": "2022-02-08T19:37:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P0yq",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:41:50Z",
          "updatedAt": "2022-02-08T19:41:51Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "So Edwards448 by definition has a cofactor. Should we clarify that we are still trying to do these Schnorr signatures in the prime order subgroup, not 'just' the composite-order group defined by the whole elliptic curve?",
              "createdAt": "2022-02-08T19:41:51Z",
              "updatedAt": "2022-02-08T19:41:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P2dp",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T19:48:23Z",
          "updatedAt": "2022-02-08T19:48:23Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "This is also to retain compat with Ed448 signatures? EDIT: hah yes as mentioned below \ud83d\ude48",
              "createdAt": "2022-02-08T19:48:23Z",
              "updatedAt": "2022-02-08T19:48:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P3rx",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Non-blocking q's, looks good",
          "createdAt": "2022-02-08T19:53:13Z",
          "updatedAt": "2022-02-08T19:53:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs840P7dU",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T20:07:52Z",
          "updatedAt": "2022-02-08T20:07:52Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Heh, yeah. Do you have a preference? \ud83e\udd37 ",
              "createdAt": "2022-02-08T20:07:52Z",
              "updatedAt": "2022-02-08T20:07:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P7kA",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T20:08:17Z",
          "updatedAt": "2022-02-08T20:08:17Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "That's not a bad idea. Can we do this in a followup PR? (And would you be willing to do that?)",
              "createdAt": "2022-02-08T20:08:17Z",
              "updatedAt": "2022-02-08T20:08:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840P7lS",
          "commit": {
            "abbreviatedOid": "5353338"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-08T20:08:21Z",
          "updatedAt": "2022-02-08T20:08:21Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": ":) ",
              "createdAt": "2022-02-08T20:08:21Z",
              "updatedAt": "2022-02-08T20:08:21Z"
            }
          ]
        }
      ]
    },
    {
      "number": 73,
      "id": "PR_kwDOEpUZs84yQ4cJ",
      "title": "Update single-signer Schnorr signature operations names",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/73",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "They were talking about 'group' commitments and keys ",
      "createdAt": "2022-02-08T22:07:21Z",
      "updatedAt": "2022-02-08T22:08:30Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "21471bbd339579da93ba14c0b1a4a79e6279c45a",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dconnolly-patch-1",
      "headRefOid": "81b6b3cd8e34516470f9289755e9835bb80a8d26",
      "closedAt": "2022-02-08T22:08:01Z",
      "mergedAt": "2022-02-08T22:08:01Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "890f446ba5d1be1ab3ff01b8ac542205c9d3a91a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840QXd3",
          "commit": {
            "abbreviatedOid": "81b6b3c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-08T22:07:48Z",
          "updatedAt": "2022-02-08T22:07:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "PR_kwDOEpUZs84yRZes",
      "title": "fix output documentation for secret_share_combine",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/74",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-09T02:25:01Z",
      "updatedAt": "2022-02-09T12:40:49Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "890f446ba5d1be1ab3ff01b8ac542205c9d3a91a",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "doc-fix",
      "headRefOid": "174d537271401add1ddb5004609f12bafe298c8c",
      "closedAt": "2022-02-09T03:04:20Z",
      "mergedAt": "2022-02-09T03:04:19Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b4fedc870e3b07055db9f9086972ef2981b8609a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840RA9e",
          "commit": {
            "abbreviatedOid": "174d537"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thank you! \ud83d\ude4f",
          "createdAt": "2022-02-09T03:04:16Z",
          "updatedAt": "2022-02-09T03:04:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDOEpUZs84yb8Aq",
      "title": "Refactor the document for better flow",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/75",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There was a bit of redundant information, so I cleaned that up and (I think) improved the flow.\r\n\r\nI think we still need to do a pass over variable names in the main protocol doc, but that can happen later.",
      "createdAt": "2022-02-10T21:52:46Z",
      "updatedAt": "2022-02-12T17:48:06Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "623333798381a5be5ed65381e860119f8023ca1f",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/refactor-doc",
      "headRefOid": "0f66b72ee658ac4d3436c9bf11d33025557c68f6",
      "closedAt": "2022-02-12T17:48:06Z",
      "mergedAt": "2022-02-12T17:48:06Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b4e659166de32ff18632ddfdb3d81471ca36a73e"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks! @chelseakomlo, please review and merge when convenient.",
          "createdAt": "2022-02-11T21:16:44Z",
          "updatedAt": "2022-02-11T21:16:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840fhiO",
          "commit": {
            "abbreviatedOid": "b8d7f3f"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-11T21:06:54Z",
          "updatedAt": "2022-02-11T21:06:54Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "```suggestion\r\n- Participant `i`s signing key, which is the i-th secret share of `s`.\r\n```",
              "createdAt": "2022-02-11T21:06:54Z",
              "updatedAt": "2022-02-11T21:06:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840fipi",
          "commit": {
            "abbreviatedOid": "843fa42"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-11T21:13:02Z",
          "updatedAt": "2022-02-11T21:13:03Z",
          "comments": [
            {
              "originalPosition": 266,
              "body": "```suggestion\r\nThe protocol as specified in this document does not target the following goals:\r\n```",
              "createdAt": "2022-02-11T21:13:02Z",
              "updatedAt": "2022-02-11T21:13:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840fi3x",
          "commit": {
            "abbreviatedOid": "843fa42"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-11T21:13:48Z",
          "updatedAt": "2022-02-11T21:13:48Z",
          "comments": [
            {
              "originalPosition": 268,
              "body": "```suggestion\r\n* Post quantum security. FROST, like generic Schnorr signatures, requires the hardness of the Discrete Logarithm Problem.\r\n```",
              "createdAt": "2022-02-11T21:13:48Z",
              "updatedAt": "2022-02-11T21:13:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840fjF0",
          "commit": {
            "abbreviatedOid": "843fa42"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-11T21:15:01Z",
          "updatedAt": "2022-02-11T21:15:01Z",
          "comments": [
            {
              "originalPosition": 268,
              "body": "I only make this comment because the Shamir secret sharing is in fact quantum resilient, but the group actions like the additive group stuff to generate the group Schnorr signature, is not ",
              "createdAt": "2022-02-11T21:15:01Z",
              "updatedAt": "2022-02-11T21:15:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840fjQK",
          "commit": {
            "abbreviatedOid": "315832b"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM!",
          "createdAt": "2022-02-11T21:15:56Z",
          "updatedAt": "2022-02-11T21:15:56Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs840gRk6",
          "commit": {
            "abbreviatedOid": "315832b"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks great, and added a few nitpicky changes. Thanks @chris-wood ",
          "createdAt": "2022-02-12T17:38:36Z",
          "updatedAt": "2022-02-12T17:43:24Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "I wouldn't call this a round, it is more of an aggregation step.",
              "createdAt": "2022-02-12T17:38:36Z",
              "updatedAt": "2022-02-12T17:43:24Z"
            },
            {
              "originalPosition": 194,
              "body": "This is `signing key share`",
              "createdAt": "2022-02-12T17:39:06Z",
              "updatedAt": "2022-02-12T17:43:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gRsw",
          "commit": {
            "abbreviatedOid": "6068fac"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:44:04Z",
          "updatedAt": "2022-02-12T17:44:04Z",
          "comments": [
            {
              "originalPosition": 194,
              "body": "Copy-pasted from existing text. We can update it.",
              "createdAt": "2022-02-12T17:44:04Z",
              "updatedAt": "2022-02-12T17:44:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gRxR",
          "commit": {
            "abbreviatedOid": "a400482"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:47:33Z",
          "updatedAt": "2022-02-12T17:47:33Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "```suggestion\r\n{{frost-aggregation}}.\r\n```",
              "createdAt": "2022-02-12T17:47:33Z",
              "updatedAt": "2022-02-12T17:47:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gRxe",
          "commit": {
            "abbreviatedOid": "a400482"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:47:41Z",
          "updatedAt": "2022-02-12T17:47:41Z",
          "comments": [
            {
              "originalPosition": 256,
              "body": "```suggestion\r\n## Signature Share Aggregation {#frost-aggregation}\r\n```",
              "createdAt": "2022-02-12T17:47:41Z",
              "updatedAt": "2022-02-12T17:47:41Z"
            }
          ]
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOEpUZs84ydf7E",
      "title": "improved pseudo code for derive_lagrange_coefficient",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/76",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "the rationale is that in order to understand \"index\", you need to read the whole document. This change makes `derive_lagrange_coefficient` more self-contained.",
      "createdAt": "2022-02-11T02:18:59Z",
      "updatedAt": "2022-02-11T14:08:29Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "b4fedc870e3b07055db9f9086972ef2981b8609a",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "doc-lagrange",
      "headRefOid": "d63dc8dcdd4373a13e763ee7c28248018817d47c",
      "closedAt": "2022-02-11T03:15:25Z",
      "mergedAt": "2022-02-11T03:15:25Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bc2a318d4d5f713bae6d68dafd7fdb6014017aaf"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Another solid improvement :) keep them coming, @aldenml!",
          "createdAt": "2022-02-11T03:15:20Z",
          "updatedAt": "2022-02-11T03:15:20Z"
        },
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "thanks :)",
          "createdAt": "2022-02-11T14:08:28Z",
          "updatedAt": "2022-02-11T14:08:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840b9Fi",
          "commit": {
            "abbreviatedOid": "d63dc8d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-11T03:15:02Z",
          "updatedAt": "2022-02-11T03:15:02Z",
          "comments": []
        }
      ]
    },
    {
      "number": 77,
      "id": "PR_kwDOEpUZs84yjJye",
      "title": "Add Schnorr to the title",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/77",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "So as to distinguish it from solutions for RSA or ECDSA signatures, which can be dealt with separately.",
      "createdAt": "2022-02-11T21:09:30Z",
      "updatedAt": "2022-02-11T21:17:17Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "bc2a318d4d5f713bae6d68dafd7fdb6014017aaf",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/add-schnorr-to-title",
      "headRefOid": "4531a2d86041039a8b66d6de50a0e26e0f532bde",
      "closedAt": "2022-02-11T21:17:13Z",
      "mergedAt": "2022-02-11T21:17:13Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "51664a77b0e02b86fa2cddccacc13fb5055c4d5d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840fjXh",
          "commit": {
            "abbreviatedOid": "4531a2d"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udcaf",
          "createdAt": "2022-02-11T21:16:37Z",
          "updatedAt": "2022-02-11T21:16:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 78,
      "id": "PR_kwDOEpUZs84yjLrv",
      "title": "Only trigger Sage workflow when the poc/ files change",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/78",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "dconnolly"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-11T21:19:37Z",
      "updatedAt": "2022-02-11T21:20:17Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "51664a77b0e02b86fa2cddccacc13fb5055c4d5d",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dconnolly-patch-1",
      "headRefOid": "f2d75123d4abb18dd119636f7160751d1117d940",
      "closedAt": "2022-02-11T21:20:13Z",
      "mergedAt": "2022-02-11T21:20:13Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "b494082f0ebc6726f081548265f1be165a911dca"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840fkAW",
          "commit": {
            "abbreviatedOid": "f2d7512"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-11T21:20:09Z",
          "updatedAt": "2022-02-11T21:20:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOEpUZs84ykUDT",
      "title": "Add change log",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/79",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-12T00:54:48Z",
      "updatedAt": "2022-02-12T19:39:36Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "b494082f0ebc6726f081548265f1be165a911dca",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/change-log",
      "headRefOid": "6dd537fcf2d0d38ff57c214f9dcb436819341de3",
      "closedAt": "2022-02-12T19:39:33Z",
      "mergedAt": "2022-02-12T19:39:33Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "c7308703401a26953881f08af2a855618f625ebe"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840gT1n",
          "commit": {
            "abbreviatedOid": "6dd537f"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks @chris-wood, looks great to me.",
          "createdAt": "2022-02-12T19:39:25Z",
          "updatedAt": "2022-02-12T19:39:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOEpUZs84ynWnu",
      "title": "some fixes in pseudo code for sign",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/80",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "- the statement `msg_hash = H3(msg)` was repeated, it's done near the beginning.",
      "createdAt": "2022-02-12T16:31:52Z",
      "updatedAt": "2022-02-12T17:53:33Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "e6767854decbe72ea4b9e9838f7056dd21d795d9",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "doc-sign",
      "headRefOid": "b5555cfd086902f7ae9f17a8e86f43056868a461",
      "closedAt": "2022-02-12T17:44:37Z",
      "mergedAt": "2022-02-12T17:44:37Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "623333798381a5be5ed65381e860119f8023ca1f"
      },
      "comments": [
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@chris-wood I made the changes, waiting for the next review",
          "createdAt": "2022-02-12T17:08:24Z",
          "updatedAt": "2022-02-12T17:08:24Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Can you please also update the description used in `encode_group_commitment_list`?",
          "createdAt": "2022-02-12T17:08:56Z",
          "updatedAt": "2022-02-12T17:08:56Z"
        },
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "yes, and also\r\n```\r\n- nonce_i, pair of Scalar values (d, e) generated in round one.\r\n- comm_i, pair of Element values (D, E) generated in round one\r\n```",
          "createdAt": "2022-02-12T17:09:50Z",
          "updatedAt": "2022-02-12T17:09:50Z"
        },
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "done, waiting for next review",
          "createdAt": "2022-02-12T17:17:24Z",
          "updatedAt": "2022-02-12T17:17:24Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840gQXa",
          "commit": {
            "abbreviatedOid": "d751b5b"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T16:39:33Z",
          "updatedAt": "2022-02-12T16:45:01Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "This is noted in the inputs of `derive_lagrange_coefficients()`",
              "createdAt": "2022-02-12T16:39:34Z",
              "updatedAt": "2022-02-12T16:45:01Z"
            },
            {
              "originalPosition": 8,
              "body": "I think your branch is behind, we renamed these",
              "createdAt": "2022-02-12T16:40:17Z",
              "updatedAt": "2022-02-12T16:45:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gQuj",
          "commit": {
            "abbreviatedOid": "d751b5b"
          },
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T16:57:13Z",
          "updatedAt": "2022-02-12T16:57:13Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "I just checked again, and it's `(x_j, y_j)` in `master`, and my branch is `1` commit ahead of `cfrg:master`. Let me know if I'm missing something, thanks.",
              "createdAt": "2022-02-12T16:57:13Z",
              "updatedAt": "2022-02-12T16:57:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gQyP",
          "commit": {
            "abbreviatedOid": "d751b5b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:00:29Z",
          "updatedAt": "2022-02-12T17:00:30Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "We're referring to these as `hiding_nonce_commitment` and `binding_nonce_commitment` -- I'd prefer we use those names.",
              "createdAt": "2022-02-12T17:00:29Z",
              "updatedAt": "2022-02-12T17:00:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gQye",
          "commit": {
            "abbreviatedOid": "d751b5b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:00:37Z",
          "updatedAt": "2022-02-12T17:00:37Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Yeah, I'd prefer we drop this comment.",
              "createdAt": "2022-02-12T17:00:37Z",
              "updatedAt": "2022-02-12T17:00:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gQzE",
          "commit": {
            "abbreviatedOid": "d751b5b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks for dropping the redundant `msg_hash` computation! I'd like to see some other changes before we land this, though.",
          "createdAt": "2022-02-12T17:01:01Z",
          "updatedAt": "2022-02-12T17:01:01Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs840gQ05",
          "commit": {
            "abbreviatedOid": "d751b5b"
          },
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:02:17Z",
          "updatedAt": "2022-02-12T17:02:17Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "OK, I will change to those names",
              "createdAt": "2022-02-12T17:02:17Z",
              "updatedAt": "2022-02-12T17:02:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gQ2w",
          "commit": {
            "abbreviatedOid": "d751b5b"
          },
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:03:59Z",
          "updatedAt": "2022-02-12T17:04:00Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "OK, I will drop this comment",
              "createdAt": "2022-02-12T17:04:00Z",
              "updatedAt": "2022-02-12T17:04:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gRkZ",
          "commit": {
            "abbreviatedOid": "87a0433"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T17:38:11Z",
          "updatedAt": "2022-02-12T17:38:12Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n  def sign(index, sk_i, group_public_key, nonce_i, comm_i, msg, commitment_list, participant_list):\r\n```",
              "createdAt": "2022-02-12T17:38:12Z",
              "updatedAt": "2022-02-12T17:38:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840gRku",
          "commit": {
            "abbreviatedOid": "87a0433"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-12T17:38:28Z",
          "updatedAt": "2022-02-12T17:38:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 81,
      "id": "PR_kwDOEpUZs84yvwEI",
      "title": "removed PK input from schnorr_signature_generate, renamed r var to k",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/81",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "this change matches the POC code and the rename from `r` to `k` is an improvement code-wise IMO",
      "createdAt": "2022-02-13T23:51:26Z",
      "updatedAt": "2022-02-15T00:08:01Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "c7308703401a26953881f08af2a855618f625ebe",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "code-schnorr",
      "headRefOid": "73e1645ffc1d0f0433cb763413c087b1170b9537",
      "closedAt": "2022-02-14T22:58:30Z",
      "mergedAt": "2022-02-14T22:58:30Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5c4bb72a084656c153a2b37b12051c8339af8fb5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840g_vC",
          "commit": {
            "abbreviatedOid": "308dc0f"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-02-14T00:03:02Z",
          "updatedAt": "2022-02-14T00:03:10Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "`s` is not defined",
              "createdAt": "2022-02-14T00:03:02Z",
              "updatedAt": "2022-02-14T00:03:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840g_yd",
          "commit": {
            "abbreviatedOid": "308dc0f"
          },
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-14T00:04:10Z",
          "updatedAt": "2022-02-14T00:04:10Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "right, was a copy&paste from POC code, fixing it right now",
              "createdAt": "2022-02-14T00:04:10Z",
              "updatedAt": "2022-02-14T00:04:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840ljF7",
          "commit": {
            "abbreviatedOid": "73e1645"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-14T22:25:08Z",
          "updatedAt": "2022-02-14T22:25:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 83,
      "id": "PR_kwDOEpUZs84y0tBm",
      "title": "remove trailing space in context string in H1, H2 and H3 (test vectors update)",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/83",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "an attempt to fix #82",
      "createdAt": "2022-02-15T00:42:07Z",
      "updatedAt": "2022-02-15T00:50:11Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "5c4bb72a084656c153a2b37b12051c8339af8fb5",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "fix-h-ctx-str",
      "headRefOid": "5085f5c14ce5b46f13a81f71447e744cd195ac94",
      "closedAt": "2022-02-15T00:42:54Z",
      "mergedAt": "2022-02-15T00:42:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e4996bcfced76748206f4bdfd1032832f0f227cc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840l4Hz",
          "commit": {
            "abbreviatedOid": "5085f5c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-15T00:42:49Z",
          "updatedAt": "2022-02-15T00:42:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 84,
      "id": "PR_kwDOEpUZs84y5CSi",
      "title": "minor fixes in secret_share_split pseudo code",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/84",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-16T00:12:08Z",
      "updatedAt": "2022-02-16T18:57:50Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "e4996bcfced76748206f4bdfd1032832f0f227cc",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "fix-sss",
      "headRefOid": "7a6a70a911a192ab0d20859ffc255f48a9f418c6",
      "closedAt": "2022-02-16T18:50:45Z",
      "mergedAt": "2022-02-16T18:50:45Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "83184ef84efd7c277ec7d63a9e40640abec14546"
      },
      "comments": [
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "done, waiting for next review",
          "createdAt": "2022-02-16T18:29:38Z",
          "updatedAt": "2022-02-16T18:29:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840vLP6",
          "commit": {
            "abbreviatedOid": "7a7b996"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "One minor nit, otherwise thanks!",
          "createdAt": "2022-02-16T16:11:29Z",
          "updatedAt": "2022-02-16T16:12:04Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n  def secret_share_shard(s, n, t):\r\n```\r\n\r\nCan we also update the Sage code to match? The \"shard\" terminology comes from the [VDAF spec](https://cjpatton.github.io/vdaf/draft-patton-cfrg-vdaf.html#name-sharding), which I quite like.",
              "createdAt": "2022-02-16T16:11:29Z",
              "updatedAt": "2022-02-16T16:12:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840v0Wq",
          "commit": {
            "abbreviatedOid": "7a7b996"
          },
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-16T18:19:36Z",
          "updatedAt": "2022-02-16T18:19:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Sure, I will also change one more minor thing in `trusted_dealer_keygen`",
              "createdAt": "2022-02-16T18:19:36Z",
              "updatedAt": "2022-02-16T18:19:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840v1j1",
          "commit": {
            "abbreviatedOid": "7a7b996"
          },
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-16T18:24:05Z",
          "updatedAt": "2022-02-16T18:24:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "and thanks for linking `VDAFs`, in my list of TODO to read :)",
              "createdAt": "2022-02-16T18:24:05Z",
              "updatedAt": "2022-02-16T18:24:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840v8vs",
          "commit": {
            "abbreviatedOid": "7a6a70a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-16T18:50:40Z",
          "updatedAt": "2022-02-16T18:50:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOEpUZs84y9Jmc",
      "title": "Specify signature encoding based on group Element and Scalar serialization",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/85",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Let's address the cofactor verification check in #12.\r\n\r\nCloses #72.\r\nCloses #70.",
      "createdAt": "2022-02-16T22:32:48Z",
      "updatedAt": "2022-02-24T21:29:51Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "83184ef84efd7c277ec7d63a9e40640abec14546",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/signature-encoding",
      "headRefOid": "25f4a086ff6ae5c4a0b5ab069d0b26068ee3d696",
      "closedAt": "2022-02-19T03:11:33Z",
      "mergedAt": "2022-02-19T03:11:33Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "6093adc7d9e3ea507ffb124db532261db2cd484e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs840680S",
          "commit": {
            "abbreviatedOid": "962edfe"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-19T01:13:12Z",
          "updatedAt": "2022-02-19T01:13:12Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Should we say all commitments in general? ",
              "createdAt": "2022-02-19T01:13:12Z",
              "updatedAt": "2022-02-19T01:13:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs840681z",
          "commit": {
            "abbreviatedOid": "962edfe"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-19T01:13:45Z",
          "updatedAt": "2022-02-19T01:13:45Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "```suggestion\r\nUpon receipt from each Signer, the Coordinator MUST validate the input\r\n```",
              "createdAt": "2022-02-19T01:13:45Z",
              "updatedAt": "2022-02-19T01:13:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs84068_v",
          "commit": {
            "abbreviatedOid": "962edfe"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-19T01:17:47Z",
          "updatedAt": "2022-02-19T01:17:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs8407AFa",
          "commit": {
            "abbreviatedOid": "25f4a08"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-19T03:10:58Z",
          "updatedAt": "2022-02-19T03:10:59Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "I think that's implied by validating the list.",
              "createdAt": "2022-02-19T03:10:59Z",
              "updatedAt": "2022-02-19T03:10:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs8407AF6",
          "commit": {
            "abbreviatedOid": "25f4a08"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-19T03:11:28Z",
          "updatedAt": "2022-02-19T03:11:28Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Thanks!",
              "createdAt": "2022-02-19T03:11:28Z",
              "updatedAt": "2022-02-19T03:11:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 86,
      "id": "PR_kwDOEpUZs84zFNTl",
      "title": "remove non-pre-hash message in pseudo-code",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/86",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-18T13:02:31Z",
      "updatedAt": "2022-02-23T13:32:31Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "08087b582ffc94bb0b5fb8ff486f13c9204dbd34",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "poc-msg-hash",
      "headRefOid": "0d2c75821e732e3e3a9acfd671cc96d4e392f8d0",
      "closedAt": "2022-02-23T13:10:41Z",
      "mergedAt": "2022-02-23T13:10:41Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "4dde4866b9ec2226726ab15e5be42a9f73a926a5"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Good catch, but I think we want to switch this around. In particular, I think the code is correct, but the pseudocode is wrong. @dconnolly, please correct me if I'm mistaken, but I thought we concluded that the \"non-pre-hash\" variant of EdDSA is most common.",
          "createdAt": "2022-02-22T16:34:40Z",
          "updatedAt": "2022-02-22T16:34:40Z"
        },
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Well, I can tell you that there is a benefit to having the pre-hash variant of the pseudo-code, in terms of not allocating memory, but maybe there is a way around it. Either way, I'm waiting for your decision, since I need it to match the vectors \ud83d\ude09, thanks for the review",
          "createdAt": "2022-02-22T18:16:40Z",
          "updatedAt": "2022-02-22T18:16:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Well, I can tell you that there is a benefit to having the pre-hash variant of the pseudo-code, in terms of not allocating memory, but maybe there is a way around it\r\n\r\nI don't think this is true. In fact, I would claim the opposite is true! The application _has_ to allocate memory for the message in either case, and since the hash incrementally folds the message into its internal state, there's no benefit to be gained from pre-hashing the message before computing the challenge. In contrast, pre-hashing means you now need to allocate memory for the message digest somewhere. ",
          "createdAt": "2022-02-22T18:19:09Z",
          "updatedAt": "2022-02-22T18:19:09Z"
        },
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "right, I meant to say _dynamically_ allocate in a line-by-line replication of the pseudo-code (In hindsight I shouldn't even mention that). Actually, I was already thinking of using the hash fold variant if you decide to use the \"non-pre-hash\" variant.\r\n\r\nI'm willing to work on the changes to this PR.",
          "createdAt": "2022-02-22T18:30:07Z",
          "updatedAt": "2022-02-22T18:30:07Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> right, I meant to say dynamically allocate in a line-by-line replication of the pseudo-code (In hindsight I shouldn't even mention that)\r\n\r\nWell, I would hope that implementations that are memory pressured would do the sensible thing here =) Let's use this PR to make the pseudocode changes per the comment above.",
          "createdAt": "2022-02-22T19:28:35Z",
          "updatedAt": "2022-02-22T19:28:35Z"
        },
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi @chris-wood , I made the changes, rebased and squashed, waiting for your review",
          "createdAt": "2022-02-23T13:04:30Z",
          "updatedAt": "2022-02-23T13:04:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841HHXi",
          "commit": {
            "abbreviatedOid": "0d2c758"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-23T13:10:33Z",
          "updatedAt": "2022-02-23T13:10:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 87,
      "id": "PR_kwDOEpUZs84zTCod",
      "title": "Fix verify_signature_share",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/87",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-22T16:48:59Z",
      "updatedAt": "2022-02-22T17:03:51Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "6093adc7d9e3ea507ffb124db532261db2cd484e",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/fix-verify-sig-share",
      "headRefOid": "a8cddf0811de3d084095613e79adf43d537f935e",
      "closedAt": "2022-02-22T17:03:51Z",
      "mergedAt": "2022-02-22T17:03:50Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "08087b582ffc94bb0b5fb8ff486f13c9204dbd34"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841DYxo",
          "commit": {
            "abbreviatedOid": "a8cddf0"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-22T16:50:30Z",
          "updatedAt": "2022-02-22T16:50:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDOEpUZs84zTF1g",
      "title": "Drop I2OSP",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/88",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-22T17:03:59Z",
      "updatedAt": "2022-02-28T19:23:21Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "08087b582ffc94bb0b5fb8ff486f13c9204dbd34",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/drop-I2OSP",
      "headRefOid": "d62e340a46b36d4090fa8d133db5787dbdfd3dda",
      "closedAt": "2022-02-28T19:23:21Z",
      "mergedAt": "2022-02-28T19:23:21Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "713001785bcdbe46c02369a071b1192ce55c4617"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly can we merge this?",
          "createdAt": "2022-02-25T20:37:12Z",
          "updatedAt": "2022-02-25T20:37:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841DeW8",
          "commit": {
            "abbreviatedOid": "99b228d"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-22T17:07:08Z",
          "updatedAt": "2022-02-22T17:07:16Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Does this need to be defined further in the spec or link to such a description? ",
              "createdAt": "2022-02-22T17:07:09Z",
              "updatedAt": "2022-02-22T17:07:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841Def1",
          "commit": {
            "abbreviatedOid": "99b228d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-22T17:07:35Z",
          "updatedAt": "2022-02-22T17:07:35Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Is it not clearly defined already as-is? ",
              "createdAt": "2022-02-22T17:07:35Z",
              "updatedAt": "2022-02-22T17:07:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841Ei13",
          "commit": {
            "abbreviatedOid": "99b228d"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-22T21:29:06Z",
          "updatedAt": "2022-02-22T21:29:07Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "In the POC code it is, in the spec pseudocode it's a bit fuzzy",
              "createdAt": "2022-02-22T21:29:07Z",
              "updatedAt": "2022-02-22T21:29:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841EjEH",
          "commit": {
            "abbreviatedOid": "99b228d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-22T21:30:01Z",
          "updatedAt": "2022-02-22T21:30:01Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Can you elaborate on how it's fuzzy, or offer a suggestion to clarify?",
              "createdAt": "2022-02-22T21:30:01Z",
              "updatedAt": "2022-02-22T21:30:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YBYm",
          "commit": {
            "abbreviatedOid": "99b228d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T19:10:30Z",
          "updatedAt": "2022-02-28T19:10:35Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n  big-endian byte string. For example, `encode_uint16(310) = [0x01, 0x36]`.\r\n```",
              "createdAt": "2022-02-28T19:10:30Z",
              "updatedAt": "2022-02-28T19:10:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YBeG",
          "commit": {
            "abbreviatedOid": "99b228d"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T19:10:55Z",
          "updatedAt": "2022-02-28T19:10:55Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Resolved, thanks!",
              "createdAt": "2022-02-28T19:10:55Z",
              "updatedAt": "2022-02-28T19:10:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YBhn",
          "commit": {
            "abbreviatedOid": "d62e340"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks!",
          "createdAt": "2022-02-28T19:11:11Z",
          "updatedAt": "2022-02-28T19:11:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 89,
      "id": "PR_kwDOEpUZs84zTocc",
      "title": "Add note about applications needing to verify the message before signing",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/89",
      "state": "CLOSED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We assume that messages to be signed are in fact valid for the higher-level application. This PR adds this as a note as a reminder to implementors. \r\n\r\nAddresses #47",
      "createdAt": "2022-02-22T20:10:43Z",
      "updatedAt": "2022-02-23T16:08:27Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "08087b582ffc94bb0b5fb8ff486f13c9204dbd34",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "verify-msg",
      "headRefOid": "a80ddbc70e6ad5566cd817d28d44f913a3d76108",
      "closedAt": "2022-02-23T16:08:27Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841EQyF",
          "commit": {
            "abbreviatedOid": "76d9eb3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-02-22T20:12:18Z",
          "updatedAt": "2022-02-22T20:12:28Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "\"Valid\" isn't really well-defined, so I would either remove it entirely, or put it in the security considerations.",
              "createdAt": "2022-02-22T20:12:18Z",
              "updatedAt": "2022-02-22T20:12:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841ESyQ",
          "commit": {
            "abbreviatedOid": "a80ddbc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-02-22T20:20:58Z",
          "updatedAt": "2022-02-22T20:21:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Sorry, but I don't think my prior comment was clear. I don't think this is an appropriate MUST for the main protocol. It's not enforceable. This text belongs in the security considerations section.",
              "createdAt": "2022-02-22T20:20:58Z",
              "updatedAt": "2022-02-22T20:21:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841EYft",
          "commit": {
            "abbreviatedOid": "a80ddbc"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-22T20:44:57Z",
          "updatedAt": "2022-02-22T20:44:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 90,
      "id": "PR_kwDOEpUZs84zUQDw",
      "title": "Message validation",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/90",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Alternative to #89.",
      "createdAt": "2022-02-23T00:44:02Z",
      "updatedAt": "2022-02-23T23:24:03Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "08087b582ffc94bb0b5fb8ff486f13c9204dbd34",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/input-validation",
      "headRefOid": "d8b2eb367a33c3b31d0b2c242386561e0e74d650",
      "closedAt": "2022-02-23T16:08:18Z",
      "mergedAt": "2022-02-23T16:08:18Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2a2861e3ca1112cbd58496799c6e082837c846fb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841FT6i",
          "commit": {
            "abbreviatedOid": "d8b2eb3"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks great! Thanks @chris-wood ",
          "createdAt": "2022-02-23T03:23:41Z",
          "updatedAt": "2022-02-23T03:23:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs841KAm_",
          "commit": {
            "abbreviatedOid": "d8b2eb3"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-23T23:24:03Z",
          "updatedAt": "2022-02-23T23:24:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDOEpUZs84zWF6U",
      "title": "minor fixes in pseudo-code",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/91",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-23T13:43:01Z",
      "updatedAt": "2022-02-23T16:09:42Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "4dde4866b9ec2226726ab15e5be42a9f73a926a5",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "fix-verify-share",
      "headRefOid": "f64910818addbb98211fe35fbe46ac0c7c9ea1a9",
      "closedAt": "2022-02-23T16:09:04Z",
      "mergedAt": "2022-02-23T16:09:04Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "02107d776ac2be1ebcf369151428f3f4c4cd8997"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841IGoO",
          "commit": {
            "abbreviatedOid": "f649108"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-23T16:08:59Z",
          "updatedAt": "2022-02-23T16:08:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 92,
      "id": "PR_kwDOEpUZs84zX-4x",
      "title": "Describe commitment_share in the SignatureShare struct",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/92",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-23T23:26:18Z",
      "updatedAt": "2022-02-23T23:28:07Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "02107d776ac2be1ebcf369151428f3f4c4cd8997",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dconnolly-patch-1",
      "headRefOid": "5dc84beda47a4350c0dbcbf07cfe3506b48642a0",
      "closedAt": "2022-02-23T23:26:58Z",
      "mergedAt": "2022-02-23T23:26:58Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0a9947deafb9de2aac85db747c7e4e63f46f57d3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841KBCh",
          "commit": {
            "abbreviatedOid": "5dc84be"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-23T23:26:53Z",
          "updatedAt": "2022-02-23T23:26:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 93,
      "id": "PR_kwDOEpUZs84zX_Xn",
      "title": "Missing underscore",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/93",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-23T23:29:47Z",
      "updatedAt": "2022-02-23T23:32:10Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "0a9947deafb9de2aac85db747c7e4e63f46f57d3",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dconnolly-patch-1",
      "headRefOid": "872834ae49f9b7ba60ff6a6fc6399ab08334199d",
      "closedAt": "2022-02-23T23:32:10Z",
      "mergedAt": "2022-02-23T23:32:10Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e66d26c670e245c7117529d842884c1c856d796e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 94,
      "id": "PR_kwDOEpUZs84zfFKr",
      "title": "Breakout commitment share generation to an aggregate subroutine",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/94",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And remove R_share as an output from round two. This also decomposes `sign` and `verify_signature_share` into smaller, reusable subroutines. ",
      "createdAt": "2022-02-25T20:32:29Z",
      "updatedAt": "2022-03-02T15:05:20Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "320cb6dbb5ffd79bc13413097dffeb5395f47866",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/breakout-comm-share",
      "headRefOid": "cfc2614bab933ae561a9460020219892be4f1ffc",
      "closedAt": "2022-03-02T15:05:20Z",
      "mergedAt": "2022-03-02T15:05:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "6d98736ab4afb7fdcd10a914a65d5f8118f66010"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@dconnolly any followup changes you'd like to see here?",
          "createdAt": "2022-02-28T21:34:32Z",
          "updatedAt": "2022-02-28T21:34:32Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841X3-U",
          "commit": {
            "abbreviatedOid": "9205e4f"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T18:31:11Z",
          "updatedAt": "2022-02-28T18:31:12Z",
          "comments": [
            {
              "originalPosition": 167,
              "body": "```suggestion\r\n    issued in Round 1 by each signer, where each element in the list indicates the signer index j and their\r\n```",
              "createdAt": "2022-02-28T18:31:11Z",
              "updatedAt": "2022-02-28T18:31:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841X4Bd",
          "commit": {
            "abbreviatedOid": "9205e4f"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T18:31:23Z",
          "updatedAt": "2022-02-28T18:31:24Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "```suggestion\r\n    list of commitments issued in Round 1 by each signer, where each element in the list indicates the signer index j and their\r\n```",
              "createdAt": "2022-02-28T18:31:23Z",
              "updatedAt": "2022-02-28T18:31:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841X_kW",
          "commit": {
            "abbreviatedOid": "9205e4f"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, thanks for this change. ",
          "createdAt": "2022-02-28T19:02:21Z",
          "updatedAt": "2022-02-28T20:09:31Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "Lagrange coefficient",
              "createdAt": "2022-02-28T19:02:21Z",
              "updatedAt": "2022-02-28T20:09:31Z"
            },
            {
              "originalPosition": 187,
              "body": "I don't think `comm_i` needs to be an input anymore?",
              "createdAt": "2022-02-28T19:05:32Z",
              "updatedAt": "2022-02-28T20:09:31Z"
            },
            {
              "originalPosition": 156,
              "body": "to check that the signature share is valid",
              "createdAt": "2022-02-28T19:46:47Z",
              "updatedAt": "2022-02-28T20:09:31Z"
            },
            {
              "originalPosition": 161,
              "body": "We should probably have a \"the index MUST NOT equal `0`\"?",
              "createdAt": "2022-02-28T19:47:36Z",
              "updatedAt": "2022-02-28T20:09:31Z"
            },
            {
              "originalPosition": 206,
              "body": "Lagrange coefficient",
              "createdAt": "2022-02-28T19:51:29Z",
              "updatedAt": "2022-02-28T20:09:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841Yf8p",
          "commit": {
            "abbreviatedOid": "9ddb8a9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T21:31:25Z",
          "updatedAt": "2022-02-28T21:31:25Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "```suggestion\r\n    # Compute Lagrange coefficient\r\n```",
              "createdAt": "2022-02-28T21:31:25Z",
              "updatedAt": "2022-02-28T21:31:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YgEL",
          "commit": {
            "abbreviatedOid": "9ddb8a9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T21:31:58Z",
          "updatedAt": "2022-02-28T21:31:59Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "Not new text, so leaving this as-is. Let's file a separate issue if we want to change it?",
              "createdAt": "2022-02-28T21:31:59Z",
              "updatedAt": "2022-02-28T21:31:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YgZW",
          "commit": {
            "abbreviatedOid": "9ddb8a9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T21:33:38Z",
          "updatedAt": "2022-02-28T21:33:39Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "It's currently used directly, rather than being extracted from the commitment list, so I'm leaving this as-is for now. In a followup change, we should go through and implement helpers for mapping the commitment list to individual commitment values and participant lists.",
              "createdAt": "2022-02-28T21:33:38Z",
              "updatedAt": "2022-02-28T21:33:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841Yga3",
          "commit": {
            "abbreviatedOid": "9ddb8a9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T21:33:44Z",
          "updatedAt": "2022-02-28T21:33:45Z",
          "comments": [
            {
              "originalPosition": 206,
              "body": "```suggestion\r\n    # Compute Lagrange coefficient\r\n```",
              "createdAt": "2022-02-28T21:33:45Z",
              "updatedAt": "2022-02-28T21:33:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841Ygf4",
          "commit": {
            "abbreviatedOid": "8ec6d74"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T21:34:05Z",
          "updatedAt": "2022-02-28T21:34:05Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "```suggestion\r\nparameters, to check that the signature share is valid using the following procedure.\r\n```",
              "createdAt": "2022-02-28T21:34:05Z",
              "updatedAt": "2022-02-28T21:34:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YghT",
          "commit": {
            "abbreviatedOid": "8ec6d74"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T21:34:12Z",
          "updatedAt": "2022-02-28T21:34:12Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "Applied via suggestion.",
              "createdAt": "2022-02-28T21:34:12Z",
              "updatedAt": "2022-02-28T21:34:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841eSg0",
          "commit": {
            "abbreviatedOid": "9205e4f"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T06:07:18Z",
          "updatedAt": "2022-03-02T06:07:18Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "\ud83d\udc4d",
              "createdAt": "2022-03-02T06:07:18Z",
              "updatedAt": "2022-03-02T06:07:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841eS8j",
          "commit": {
            "abbreviatedOid": "9205e4f"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T06:10:41Z",
          "updatedAt": "2022-03-02T06:10:41Z",
          "comments": [
            {
              "originalPosition": 232,
              "body": "```suggestion\r\n  - group_commitment, the group commitment returned by compute_group_commitment\r\n```",
              "createdAt": "2022-03-02T06:10:41Z",
              "updatedAt": "2022-03-02T06:10:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841eVs3",
          "commit": {
            "abbreviatedOid": "af73848"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-02T06:30:04Z",
          "updatedAt": "2022-03-02T06:30:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOEpUZs84zqXmm",
      "title": "Bump actions/setup-python from 2 to 3.0.0",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/95",
      "state": "MERGED",
      "author": "dependabot",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "dconnolly"
      ],
      "labels": [
        "dependencies"
      ],
      "body": "Bumps [actions/setup-python](https://github.com/actions/setup-python) from 2 to 3.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node16 (<a href=\"https://github-redirect.dependabot.com/actions/setup-python/pull/340\">actions/setup-python#340</a>)</li>\n<li>Update <code>package-lock.json</code> file version to 2, <code>@types/node</code> to 16.11.25 and <code>typescript</code> to 4.2.3 (<a href=\"https://github-redirect.dependabot.com/actions/setup-python/pull/341\">actions/setup-python#341</a>)</li>\n<li>Remove legacy <code>pypy2</code> and <code>pypy3</code> keywords (<a href=\"https://github-redirect.dependabot.com/actions/setup-python/pull/342\">actions/setup-python#342</a>)</li>\n</ul>\n<h3>Breaking Changes</h3>\n<p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>\n<p>This new major release removes support of legacy <code>pypy2</code> and <code>pypy3</code> keywords. Please use more specific and flexible syntax to specify a PyPy version:</p>\n<pre lang=\"yaml\"><code>jobs:\n  build:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        python-version:\n        - 'pypy-2.7' # the latest available version of PyPy that supports Python 2.7\n        - 'pypy-3.8' # the latest available version of PyPy that supports Python 3.8\n        - 'pypy-3.8-v7.3.8' # Python 3.8 and PyPy 7.3.8\n    steps:\n    - uses: actions/checkout@v2\n    - uses: actions/setup-python@v3\n      with:\n        python-version: ${{ matrix.python-version }}\n</code></pre>\n<p>See more usage examples in the <a href=\"https://github.com/actions/setup-python#specifying-a-pypy-version\">documentation</a></p>\n<h2>Update primary and restore keys for pip</h2>\n<p>In scope of this release we <a href=\"https://github-redirect.dependabot.com/actions/setup-python/pull/303\">include a version of python in restore and primary cache keys for pip</a>. Besides, we add temporary fix for Windows caching <a href=\"https://github-redirect.dependabot.com/actions/setup-python/pull/332\">issue</a>, that the <code>pip cache dir</code> command returns non zero exit code or writes to stderr. Moreover we updated <a href=\"https://github-redirect.dependabot.com/actions/setup-python/pull/327\">node-fetch dependency</a>.</p>\n<h2>Update\u00a0actions/cache\u00a0version to 1.0.8</h2>\n<p>We have updated\u00a0<a href=\"https://github.com/actions/toolkit/blob/main/packages/cache/RELEASES.md#108\">actions/cache</a>\u00a0dependency version to 1.0.8 to support 10GB cache upload</p>\n<h2>Support caching dependencies</h2>\n<p>This release introduces dependency caching support (<a href=\"https://github-redirect.dependabot.com/actions/setup-python/pull/266\">actions/setup-python#266</a>)</p>\n<h2>Caching dependencies.</h2>\n<p>The action has a built-in functionality for caching and restoring pip/pipenv dependencies. The <code>cache</code> input is optional, and caching is turned off by default.</p>\n<p>Besides, this release introduces dependency caching support for mono repos and repositories with complex structure.</p>\n<p>By default, the action searches for the dependency file (requirements.txt for pip or Pipfile.lock for pipenv) in the whole repository. Use the <code>cache-dependency-path</code> input for cases when you want to override current behaviour and use different file for hash generation (for example requirements-dev.txt). This input supports wildcards or a list of file names for caching multiple dependencies.</p>\n<h3>Caching pip dependencies:</h3>\n<pre><code>steps:\n- uses: actions/checkout@v2\n- uses: actions/setup-python@v2\n  with:\n    python-version: '3.9'\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/0ebf233433c08fb9061af664d501c3f3ff0e9e20\"><code>0ebf233</code></a> Remove legacy PyPy input (<a href=\"https://github-redirect.dependabot.com/actions/setup-python/issues/342\">#342</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/665cd78205d9937a51af8cdb754840e2bc95c2d5\"><code>665cd78</code></a> Update lockfileversion (<a href=\"https://github-redirect.dependabot.com/actions/setup-python/issues/341\">#341</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/93cb78f17ba30b733a6c17d0f21183bdc0140887\"><code>93cb78f</code></a> Update to node16 (<a href=\"https://github-redirect.dependabot.com/actions/setup-python/issues/340\">#340</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/setup-python/compare/v2...v3.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=2&new-version=3.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "createdAt": "2022-02-28T12:34:09Z",
      "updatedAt": "2022-02-28T19:27:24Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "edaeb3f0584dbc1159c1a64ed684273b500c1b28",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dependabot/github_actions/actions/setup-python-3.0.0",
      "headRefOid": "797a5cd4e8549757b169f0a34a49ccbf0bf11c2f",
      "closedAt": "2022-02-28T19:27:21Z",
      "mergedAt": "2022-02-28T19:27:21Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "dc6372ee542fe530be3cb0d89f92ac9848b260d5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841YFBn",
          "commit": {
            "abbreviatedOid": "797a5cd"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-28T19:27:13Z",
          "updatedAt": "2022-02-28T19:27:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 96,
      "id": "PR_kwDOEpUZs84zrv6i",
      "title": "Add `frost-ristretto255` to the existing implementations",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/96",
      "state": "MERGED",
      "author": "dconnolly",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-28T19:20:12Z",
      "updatedAt": "2022-02-28T19:21:40Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "edaeb3f0584dbc1159c1a64ed684273b500c1b28",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dconnolly-patch-2",
      "headRefOid": "f294b19127840ae8ba7f330dc41274c79bb45cc1",
      "closedAt": "2022-02-28T19:21:40Z",
      "mergedAt": "2022-02-28T19:21:40Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "0f86b1918dc6216c3995178fedb20784c0fcd545"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 97,
      "id": "PR_kwDOEpUZs84zrwPc",
      "title": "Delete secrets when done",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/97",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #44.",
      "createdAt": "2022-02-28T19:21:50Z",
      "updatedAt": "2022-02-28T19:41:36Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "0f86b1918dc6216c3995178fedb20784c0fcd545",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "caw/delete-secret-things",
      "headRefOid": "39f5807b3f397657916e6add98399e7f6e0309b3",
      "closedAt": "2022-02-28T19:41:36Z",
      "mergedAt": "2022-02-28T19:41:36Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a8f9c346c7f9b387374afd7b6b96959a2d982ba5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841YEKz",
          "commit": {
            "abbreviatedOid": "39f5807"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-28T19:23:15Z",
          "updatedAt": "2022-02-28T19:23:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs841YELi",
          "commit": {
            "abbreviatedOid": "39f5807"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-28T19:23:19Z",
          "updatedAt": "2022-02-28T19:23:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs841YEt9",
          "commit": {
            "abbreviatedOid": "39f5807"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T19:25:50Z",
          "updatedAt": "2022-02-28T19:25:50Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nthe nonce and SHOULD delete the corresponding commitment after this round completes.\r\n```",
              "createdAt": "2022-02-28T19:25:50Z",
              "updatedAt": "2022-02-28T19:25:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YFke",
          "commit": {
            "abbreviatedOid": "39f5807"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T19:29:41Z",
          "updatedAt": "2022-02-28T19:29:41Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Clarify to ensure that nonces are used only once. ",
              "createdAt": "2022-02-28T19:29:41Z",
              "updatedAt": "2022-02-28T19:29:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841YIIp",
          "commit": {
            "abbreviatedOid": "39f5807"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-28T19:41:32Z",
          "updatedAt": "2022-02-28T19:41:33Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Done in #98.",
              "createdAt": "2022-02-28T19:41:32Z",
              "updatedAt": "2022-02-28T19:41:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 98,
      "id": "PR_kwDOEpUZs84zrymh",
      "title": "Require that nonces MUST NOT be used more than once",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/98",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-28T19:36:39Z",
      "updatedAt": "2022-02-28T19:41:46Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "dc6372ee542fe530be3cb0d89f92ac9848b260d5",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "chris-wood-patch-3",
      "headRefOid": "8aaf199ca6383979714904a09ad21c9ba8e582bd",
      "closedAt": "2022-02-28T19:41:46Z",
      "mergedAt": "2022-02-28T19:41:46Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "320cb6dbb5ffd79bc13413097dffeb5395f47866"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841YH0g",
          "commit": {
            "abbreviatedOid": "8aaf199"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good!",
          "createdAt": "2022-02-28T19:39:59Z",
          "updatedAt": "2022-02-28T19:39:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 100,
      "id": "PR_kwDOEpUZs84z02u7",
      "title": "Bump actions/checkout from 2 to 3",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/100",
      "state": "MERGED",
      "author": "dependabot",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "dconnolly"
      ],
      "labels": [
        "dependencies"
      ],
      "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 2 to 3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<ul>\n<li>Update default runtime to node16</li>\n</ul>\n<h2>v2.4.0</h2>\n<ul>\n<li>Convert SSH URLs like <code>org-&lt;ORG_ID&gt;@github.com:</code> to <code>https://github.com/</code> - <a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/621\">pr</a></li>\n</ul>\n<h2>v2.3.5</h2>\n<p>Update dependencies</p>\n<h2>v2.3.4</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/379\">Add missing <code>await</code>s</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/360\">Swap to Environment Files</a></li>\n</ul>\n<h2>v2.3.3</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/345\">Remove Unneeded commit information from build logs</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/326\">Add Licensed to verify third party dependencies</a></li>\n</ul>\n<h2>v2.3.2</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/320\">Add Third Party License Information to Dist Files</a></p>\n<h2>v2.3.1</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/284\">Fix default branch resolution for .wiki and when using SSH</a></p>\n<h2>v2.3.0</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/278\">Fallback to the default branch</a></p>\n<h2>v2.2.0</h2>\n<p><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/258\">Fetch all history for all tags and branches when fetch-depth=0</a></p>\n<h2>v2.1.1</h2>\n<p>Changes to support GHES (<a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/236\">here</a> and <a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/248\">here</a>)</p>\n<h2>v2.1.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/191\">Group output</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/199\">Changes to support GHES alpha release</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/184\">Persist core.sshCommand for submodules</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/163\">Add support ssh</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/179\">Convert submodule SSH URL to HTTPS, when not using SSH</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/157\">Add submodule support</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/144\">Follow proxy settings</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/141\">Fix ref for pr closed event when a pr is merged</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/128\">Fix issue checking detached when git less than 2.22</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v2.3.1</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/284\">Fix default branch resolution for .wiki and when using SSH</a></li>\n</ul>\n<h2>v2.3.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/278\">Fallback to the default branch</a></li>\n</ul>\n<h2>v2.2.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/258\">Fetch all history for all tags and branches when fetch-depth=0</a></li>\n</ul>\n<h2>v2.1.1</h2>\n<ul>\n<li>Changes to support GHES (<a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/236\">here</a> and <a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/248\">here</a>)</li>\n</ul>\n<h2>v2.1.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/191\">Group output</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/199\">Changes to support GHES alpha release</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/184\">Persist core.sshCommand for submodules</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/163\">Add support ssh</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/179\">Convert submodule SSH URL to HTTPS, when not using SSH</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/157\">Add submodule support</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/144\">Follow proxy settings</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/141\">Fix ref for pr closed event when a pr is merged</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/128\">Fix issue checking detached when git less than 2.22</a></li>\n</ul>\n<h2>v2.0.0</h2>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/108\">Do not pass cred on command line</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/107\">Add input persist-credentials</a></li>\n<li><a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/104\">Fallback to REST API to download repo</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/a12a3943b4bdde767164f792f33f40b04645d846\"><code>a12a394</code></a> update readme for v3 (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/708\">#708</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8f9e05e482293f862823fcca12d9eddfb3723131\"><code>8f9e05e</code></a> Update to node 16 (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/689\">#689</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/230611dbd0eb52da1e1f4f7bc8bb0c3a339fc8b7\"><code>230611d</code></a> Change secret name for PAT to not start with GITHUB_ (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/623\">#623</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v2...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
      "createdAt": "2022-03-02T12:33:58Z",
      "updatedAt": "2022-03-02T19:01:30Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "320cb6dbb5ffd79bc13413097dffeb5395f47866",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "dependabot/github_actions/actions/checkout-3",
      "headRefOid": "e509c8a9b9fac07444f204622e4de91a1780fdd6",
      "closedAt": "2022-03-02T19:01:27Z",
      "mergedAt": "2022-03-02T19:01:27Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "42e400b70f340dc527a9820f3e6c0ad321befd6c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841htOa",
          "commit": {
            "abbreviatedOid": "e509c8a"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-02T19:01:22Z",
          "updatedAt": "2022-03-02T19:01:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 101,
      "id": "PR_kwDOEpUZs84z3QoO",
      "title": "minor fix in verify_signature_share pseudo code",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/101",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-03T01:22:49Z",
      "updatedAt": "2022-03-03T02:27:30Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "42e400b70f340dc527a9820f3e6c0ad321befd6c",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "minor-fix",
      "headRefOid": "aed60f95e1b8b59eda33c53a58c0aa9dc5f13fd4",
      "closedAt": "2022-03-03T01:58:45Z",
      "mergedAt": "2022-03-03T01:58:45Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e3bf48984f01a6330e23f843c3a6a9e8500854bb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841jAek",
          "commit": {
            "abbreviatedOid": "aed60f9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-03T01:58:41Z",
          "updatedAt": "2022-03-03T01:58:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 102,
      "id": "PR_kwDOEpUZs84z3dLw",
      "title": "add a c implementation to readme",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/102",
      "state": "MERGED",
      "author": "aldenml",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Hello, for your consideration (relevant files):\r\n\r\nhttps://github.com/aldenml/ecc/blob/master/src/frost.h\r\nhttps://github.com/aldenml/ecc/blob/master/src/frost.c\r\nhttps://github.com/aldenml/ecc/blob/master/test/test_frost.c",
      "createdAt": "2022-03-03T03:27:56Z",
      "updatedAt": "2022-03-03T19:50:40Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "e3bf48984f01a6330e23f843c3a6a9e8500854bb",
      "headRepository": "aldenml/draft-irtf-cfrg-frost",
      "headRefName": "add-c-impl",
      "headRefOid": "d7b732c75383b2c01bbe2a7eed7be95872d554b5",
      "closedAt": "2022-03-03T19:49:25Z",
      "mergedAt": "2022-03-03T19:49:25Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "def80a0a85c12ff95fb88f38d84f7f616a9a3ecf"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Excellent work!",
          "createdAt": "2022-03-03T19:49:21Z",
          "updatedAt": "2022-03-03T19:49:21Z"
        },
        {
          "author": "aldenml",
          "authorAssociation": "CONTRIBUTOR",
          "body": "thanks for your feedback!",
          "createdAt": "2022-03-03T19:50:40Z",
          "updatedAt": "2022-03-03T19:50:40Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 103,
      "id": "PR_kwDOEpUZs84z5yHW",
      "title": "Add additional check for t",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/103",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We additionally require that t > 1",
      "createdAt": "2022-03-03T16:36:05Z",
      "updatedAt": "2022-03-03T16:38:00Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "e3bf48984f01a6330e23f843c3a6a9e8500854bb",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "verify-t",
      "headRefOid": "0d27a1b6ff424ebaa593f2363c3e9091ea3bd2b0",
      "closedAt": "2022-03-03T16:38:00Z",
      "mergedAt": "2022-03-03T16:38:00Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "183f36429a674b42bc96f6474b4d616d11e8c454"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841mIy2",
          "commit": {
            "abbreviatedOid": "0d27a1b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-03T16:37:55Z",
          "updatedAt": "2022-03-03T16:37:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "PR_kwDOEpUZs84z54RN",
      "title": "Make trusted_dealer_keygen deterministic and clarify description",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/104",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-03T17:01:40Z",
      "updatedAt": "2022-03-03T19:58:04Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "183f36429a674b42bc96f6474b4d616d11e8c454",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "deterministic-keygen-and-language",
      "headRefOid": "188e4e37cf74e958ebbfde84086c513736c6d123",
      "closedAt": "2022-03-03T19:58:01Z",
      "mergedAt": "2022-03-03T19:58:01Z",
      "mergedBy": "chelseakomlo",
      "mergeCommit": {
        "oid": "8a804a0ce2fffcbda2b756dfe87739a5bbf31489"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841nAIf",
          "commit": {
            "abbreviatedOid": "3be4f7a"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-03T19:23:59Z",
          "updatedAt": "2022-03-03T19:23:59Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Assigning it to this variable does spit out the group secret as a test vector correctly",
              "createdAt": "2022-03-03T19:23:59Z",
              "updatedAt": "2022-03-03T19:24:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841nAKA",
          "commit": {
            "abbreviatedOid": "3be4f7a"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d",
          "createdAt": "2022-03-03T19:24:04Z",
          "updatedAt": "2022-03-03T19:24:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEpUZs841nAwB",
          "commit": {
            "abbreviatedOid": "3be4f7a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM pending suggestions -- thanks!",
          "createdAt": "2022-03-03T19:26:27Z",
          "updatedAt": "2022-03-03T19:28:19Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n    group_secret_key = G.random_scalar()\r\n```",
              "createdAt": "2022-03-03T19:26:28Z",
              "updatedAt": "2022-03-03T19:28:19Z"
            },
            {
              "originalPosition": 4,
              "body": "```suggestion\r\n  - s, a group secret that MUST be derived from at least `Ns` bytes of entropy\r\n```",
              "createdAt": "2022-03-03T19:28:10Z",
              "updatedAt": "2022-03-03T19:28:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841nF3a",
          "commit": {
            "abbreviatedOid": "f96295e"
          },
          "author": "chelseakomlo",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-03T19:47:24Z",
          "updatedAt": "2022-03-03T19:47:24Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Where is 'Ns' defined? ",
              "createdAt": "2022-03-03T19:47:24Z",
              "updatedAt": "2022-03-03T19:47:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841nGSX",
          "commit": {
            "abbreviatedOid": "f96295e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-03T19:49:05Z",
          "updatedAt": "2022-03-03T19:49:05Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "It's the length of a serialized scalar, defined as part of the group.",
              "createdAt": "2022-03-03T19:49:05Z",
              "updatedAt": "2022-03-03T19:49:05Z"
            }
          ]
        }
      ]
    },
    {
      "number": 105,
      "id": "PR_kwDOEpUZs84z6gWi",
      "title": "Raise an error if participant index is ever 0",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-frost/pull/105",
      "state": "MERGED",
      "author": "chelseakomlo",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Because identifiers are provided externally, signers should check that they are non-zero. This is more to prevent doing things like dividing by zero or outputting an invalid signature than an actual security break. ",
      "createdAt": "2022-03-03T20:12:14Z",
      "updatedAt": "2022-03-03T20:40:07Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-frost",
      "baseRefName": "master",
      "baseRefOid": "8a804a0ce2fffcbda2b756dfe87739a5bbf31489",
      "headRepository": "cfrg/draft-irtf-cfrg-frost",
      "headRefName": "check-invalid-indices",
      "headRefOid": "e3be54d0cb4bfe9a7d038ffa813a5e6c12c268fb",
      "closedAt": "2022-03-03T20:39:39Z",
      "mergedAt": "2022-03-03T20:39:39Z",
      "mergedBy": "dconnolly",
      "mergeCommit": {
        "oid": "4ccc0371f15a930a7b03837da9c016f2af9879df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEpUZs841nMkm",
          "commit": {
            "abbreviatedOid": "b25b65c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-03T20:14:54Z",
          "updatedAt": "2022-03-03T20:15:08Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\n    for x_j in L:\r\n      if x_j <= 0:\r\n        raise \"invalid parameters\"\r\n```",
              "createdAt": "2022-03-03T20:14:54Z",
              "updatedAt": "2022-03-03T20:15:08Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n`i` MUST never equal `0`; recall that `f(0) = s`, where `f` is the polynomial defined in a Shamir secret sharing operation.\r\n```",
              "createdAt": "2022-03-03T20:15:04Z",
              "updatedAt": "2022-03-03T20:15:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEpUZs841nSKn",
          "commit": {
            "abbreviatedOid": "57ccc5e"
          },
          "author": "dconnolly",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-03T20:39:21Z",
          "updatedAt": "2022-03-03T20:39:21Z",
          "comments": []
        }
      ]
    }
  ]
}